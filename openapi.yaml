openapi: 3.0.0
info:
  title: Salt Edge Account Information API
  description: API Reference for services
  contact:
    name: Support Team
    url: https://www.saltedge.com/pages/contact
    email: support@saltedge.com
  version: '5.0.0'
servers:
- url: https://www.saltedge.com/api/v5
  variables: {}
paths:
  /accounts:
    get:
      tags:
      - Accounts
      summary: List of accounts
      description: You can see the list of accounts of a connection.
      operationId: Listofaccounts
      parameters:
      - name: customer_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsResponse'
              example:
                data:
                - id: 333333333333333333
                  name: Fake account 1
                  nature: card
                  balance: 2007.2000000000001
                  currency_code: EUR
                  extra:
                    client_name: Fake name
                  connection_id: 111111111111111111
                  created_at: 2021-01-28T12:03:09Z
                  updated_at: 2021-01-28T12:03:09Z
                - id: 333333333333333334
                  name: Fake account 2
                  nature: account
                  balance: 2012.7000000000001
                  currency_code: USD
                  extra:
                    cards:
                    - 1234....5678
                    - '*8765'
                    transactions_count:
                      posted: 22
                      pending: 1
                  connection_id: 111111111111111111
                  created_at: 2021-01-28T13:03:09Z
                  updated_at: 2021-01-28T13:03:09Z
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /assets:
    get:
      tags:
      - Assets
      summary: List of assets
      description: You can get the list of all the assets that we support.
      operationId: Listofassets
      parameters: []
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsResponse'
              example:
                data:
                - code: BSD
                  name: BitSend
                - code: BSTY
                  name: GlobalBoost- Y
                - code: BTA
                  name: Bata
                - code: BTC
                  name: Bitcoin
                - code: BTCD
                  name: BitcoinDark
                - code: BTS
                  name: BitShares
      deprecated: false
  /attempts:
    get:
      tags:
      - Attempts
      summary: List of attempts
      description: Returns a paginated list of all attempts for a certain connection.
      operationId: Listofattempts
      parameters:
      - name: connection_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptsResponse'
      deprecated: false
  /attempts/{attempt_id}:
    get:
      tags:
      - Attempts
      summary: Attempt object
      description: Returns a single attempt object.
      operationId: Attemptobject
      parameters:
      - name: attempt_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptResponse'
      deprecated: false
  /categories/learn:
    post:
      tags:
      - Categories
      summary: Improve transaction categorization
      description: >
        Your customers can change the category of some of their transactions, thus improving the categorization accuracy.
      operationId: Improvetransactioncategorization
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearnCategoryResponse'
              example:
                data:
                  learned: true
        400:
          description: We have received some other request format instead of JSON, or the body could not be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /categories:
    get:
      tags:
      - Categories
      summary: List of categories
      description: You can get the list of [all the categories that we support](/data_enrichment/v5/#categories-list).
      operationId: Listofcategories
      parameters: []
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
              example:
                data:
                  business:
                    equipment_and_materials:
                    - electronics
                    - software
                    - supplies_and_furniture
                    - raw_materials
                    - consumer_goods
                    financials:
                    - dividends
                    - donations
                    - interest
                    - fees
                    - fines
                    - loans
                    human_resources:
                    - wages
                    - bonus
                    - employee_benefits
                    - education_and_trainings
                    - staff_outsourcing
                    - travel
                    - entertainment
                    - meals
                    income:
                    - investments
                    - sales
                    - returns
                    - prepayments
                    insurance:
                    - business_insurance
                    - liability_insurance
                    - health_insurance
                    - equipment_insurance
                    - vehicle_insurance
                    - professional_insurance
                    real_estate:
                    - office_rent
                    - mortgage
                    - construction_and_repair
                    services:
                    - contractors
                    - accounting_and_auditing
                    - legal
                    - consulting
                    - storage
                    - marketing_and_media
                    - online_subscriptions
                    - it_services
                    - cleaning
                    taxes:
                    - vat
                    - federal_taxes
                    - property_taxes
                    - income_taxes
                    - duty_taxes
                    - tax_return
                    - payroll_taxes
                    transport:
                    - shipping
                    - leasing
                    - gas_and_fuel
                    - taxi
                    - service_and_parts
                    uncategorized: []
                    utilities:
                    - internet
                    - phone
                    - water
                    - gas
                    - electricity
                  personal:
                    auto_and_transport:
                    - car_rental
                    - gas_and_fuel
                    - parking
                    - public_transportation
                    - service_and_parts
                    - taxi
                    bills_and_utilities:
                    - internet
                    - phone
                    - television
                    - utilities
                    business_services:
                    - advertising
                    - office_supplies
                    - shipping
                    education:
                    - books_and_supplies
                    - student_loan
                    - tuition
                    entertainment:
                    - amusement
                    - arts
                    - games
                    - movies_and_music
                    - newspapers_and_magazines
                    fees_and_charges:
                    - provider_fee
                    - loans
                    - service_fee
                    - taxes
                    food_and_dining:
                    - alcohol_and_bars
                    - cafes_and_restaurants
                    - groceries
                    gifts_and_donations:
                    - charity
                    - gifts
                    health_and_fitness:
                    - doctor
                    - personal_care
                    - pharmacy
                    - sports
                    - wellness
                    home:
                    - home_improvement
                    - home_services
                    - home_supplies
                    - mortgage
                    - rent
                    income:
                    - bonus
                    - investment_income
                    - paycheck
                    insurance:
                    - car_insurance
                    - health_insurance
                    - life_insurance
                    - property_insurance
                    kids:
                    - allowance
                    - babysitter_and_daycare
                    - baby_supplies
                    - child_support
                    - kids_activities
                    - toys
                    pets:
                    - pet_food_and_supplies
                    - pet_grooming
                    - veterinary
                    shopping:
                    - clothing
                    - electronics_and_software
                    - sporting_goods
                    transfer: []
                    travel:
                    - hotel
                    - transportation
                    - vacation
                    uncategorized: []
      deprecated: false
  /connect_sessions/create:
    post:
      tags:
      - Connect Sessions
      summary: Create Connect session
      description: Allows you to create a connect session, which will be used to access Salt Edge Connect for connection creation.
      operationId: CreateConnectsession
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectSessionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectSessionResponse'
              example:
                data:
                  expires_at: 2021-01-28T16:03:09Z
                  connect_url: https://www.saltedge.com/connect?token=GENERATED_TOKEN
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Invalid consent period_days value or not allowed by provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connect_sessions/reconnect:
    post:
      tags:
      - Connect Sessions
      summary: Create Connect session to reconnect
      description: Allows you to create a connect session, which will be used to access Salt Edge Connect to reconnect a connection.
      operationId: CreateConnectsessiontoreconnect
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReconnectSessionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectSessionResponse'
              example:
                data:
                  expires_at: 2021-01-28T16:03:09Z
                  connect_url: https://www.saltedge.com/connect?token=GENERATED_TOKEN
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Invalid consent period_days value or not allowed by provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connect_sessions/refresh:
    post:
      tags:
      - Connect Sessions
      summary: Create Connect session to refresh
      description: Allows you to create a connect session, which will be used to access Salt Edge Connect to refresh a connection.
      operationId: CreateConnectsessiontorefresh
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshSessionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectSessionResponse'
              example:
                data:
                  expires_at: 2021-01-28T16:03:09Z
                  connect_url: https://www.saltedge.com/connect?token=GENERATED_TOKEN
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Refresh is not possible because the consent has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connections:
    post:
      tags:
      - Connections
      summary: Create a connection
      description: >
        When not using [Salt Edge Connect](#salt_edge_connect), your app will have to pass

        the user's values of provider's [fields](#providers-fields) within the payload.


        The credentials object should be modeled after the provider's fields.
      operationId: Createaconnection
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        400:
          description: Provider with the `file` mode was chosen, but no file was uploaded before creating or reconnecting a connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Sending a `provider_code` that is not present in our system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Connection fetching had stopped because of fetching timeout or connection was deleted during fetch process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        409:
          description: The client tried to create a connection that already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    get:
      tags:
      - Connections
      summary: List of connections
      description: >
        Returns all the connections accessible to your application for a certain customer.

        The connections are sorted in ascending order of their `id`, so the newest connections will come last.

        We recommend you fetch the whole list of connections to check whether any of the properties have changed.
      operationId: Listofconnections
      parameters:
      - name: customer_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsResponse'
        400:
          description: Sending a value (e.g. `id`) which exceeds integer limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connections/{connection_id}/interactive:
    put:
      tags:
      - Connections
      summary: Interactive step
      description: >
        If the currently fetching connection requires any interactive credentials for fetching, Salt Edge will send the [Interactive callback](#interactive). Make sure to specify the `Interactive URL` in your client account by accessing <a href='https://www.saltedge.com/clients/callbacks/edit' target="_blank">callbacks page</a>.


        Upon receiving the interactive callback, your app should ask the user for the interactive credentials and send them to the `/interactive` route for the connection. After that, the fetching process will continue as usual.
      operationId: Interactivestep
      parameters:
      - name: connection_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractiveConnectionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        400:
          description: The JSON request is incorrectly formed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: You have excluded all the accounts from the connection fetching process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connections/{connection_id}/reconnect:
    put:
      tags:
      - Connections
      summary: Reconnect a connection
      description: >
        In order to [reconnect](#connections-reconnect) a connection, your app needs to send the credentials object, connection's `id`, [consent object](#consents-object) and/or [attempt object](#attempts-object). This means that the consent confirmation should be handled on the client's side, and the 'access terms' the customer agreed on should be passed.
      operationId: Reconnectaconnection
      parameters:
      - name: connection_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReconnectConnectionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Background fetch limit (4 times in a 24 hour period) was exceeded (without user's presence). This restriction applies only to PSD2 providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connections/{connection_id}/refresh:
    put:
      tags:
      - Connections
      summary: Refresh a connection
      description: >
        Allows you to trigger a refetch of the data associated with a specific connection.

        Note that you can refresh a connection only if it has an active [consent](#consents).

        If the response is successful, it will contain the `next_refresh_possible_at` value, and you can expect the [usual callbacks](#callbacks) of the fetching workflow.
      operationId: Refreshaconnection
      parameters:
      - name: connection_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshConnectionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Refresh is not possible because the consent has expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /connections/{connection_id}:
    delete:
      tags:
      - Connections
      summary: Remove a connection
      description: >
        Removes a connection from our system and revokes the consent.

        All the associated accounts and transactions to that connection will be destroyed as well.

        Salt Edge will send a [destroy](#destroy) callback to your web application. Make sure to specify the `Destroy URL` in your client account by accessing <a href='https://www.saltedge.com/clients/callbacks/edit' target="_blank">callbacks page</a>.
      operationId: Removeaconnection
      parameters:
      - name: connection_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovedConnectionResponse'
              example:
                data:
                  id: 111111111111111111
                  removed: true
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Too many connections are being processed at the same time from one application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    get:
      tags:
      - Connections
      summary: Show a connection
      description: Returns a single connection object.
      operationId: Showaconnection
      parameters:
      - name: connection_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    put:
      tags:
      - Connections
      summary: Update connection
      description: >
        Update `status`, `store_credentials` or `daily_refresh` of a connection.
      operationId: Updateconnection
      parameters:
      - name: connection_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectionRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
        400:
          description: The JSON request is incorrectly formed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /consents:
    get:
      tags:
      - Consents
      summary: List of consents
      description: Returns all the consents accessible to your application for a certain customer or a connection.
      operationId: Listofconsents
      parameters:
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: customer_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentsResponse'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /consents/{consent_id}:
    get:
      tags:
      - Consents
      summary: Show consent
      description: Returns the [consent object](#consents-attributes).
      operationId: Showconsent
      parameters:
      - name: consent_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: customer_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
        404:
          description: A consent with such `id` does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /consents/{consent_id}/revoke:
    put:
      tags:
      - Consents
      summary: Revoke consent
      description: Allows you to revoke a consent for a connection or a customer.
      operationId: Revokeconsent
      parameters:
      - name: consent_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: customer_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
        404:
          description: A consent with such `id` does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: The consent has already been revoked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /countries:
    get:
      tags:
      - Countries
      summary: List of countries
      description: Returns a list of countries supported by Account Information API.
      operationId: Listofcountries
      parameters:
      - name: include_fake_providers
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesResponse'
              example:
                data:
                - code: CZ
                  name: Czech Republic
                  refresh_start_time: 1
                - code: IL
                  name: Israel
                  refresh_start_time: 7
                - code: MD
                  name: Moldova
                  refresh_start_time: 0
                - code: RO
                  name: Romania
                  refresh_start_time: 0
                - code: ES
                  name: Spain
                  refresh_start_time: 1
                - code: GB
                  name: United Kingdom
                  refresh_start_time: 23
                - code: XF
                  name: Fake
                  refresh_start_time: 8
                - code: XO
                  name: Other
                  refresh_start_time: 4
      deprecated: false
  /currencies:
    get:
      tags:
      - Currencies
      summary: List of currencies
      description: You can get the list of all the currencies that we support.
      operationId: Listofcurrencies
      parameters: []
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesResponse'
              example:
                data:
                - code: AED
                  name: United Arab Emirates dirham
                - code: AFN
                  name: Afghan afghani
                - code: ALL
                  name: Albanian lek
                - code: AMD
                  name: Armenian dram
                - code: ANG
                  name: Netherlands Antillean guilder
                - code: AOA
                  name: Angolan kwanza
                - code: ARS
                  name: Argentine peso
                - code: AUD
                  name: Australian dollar
                - code: AWG
                  name: Aruban florin
      deprecated: false
  /customers:
    post:
      tags:
      - Customers
      summary: Creates a customer.
      description: Creates a customer, returning the customer object.
      operationId: Createsacustomer.
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestBody'
        required: false
      responses:
        201:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedCustomerResponse'
        400:
          description: We have received some other request format instead of JSON, or the body could not be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Invalid identifier sent for identifying the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        409:
          description: The customer you are trying to create already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    get:
      tags:
      - Customers
      summary: All customers.
      description: >
        List all of your app's customers.

        This route is available only for web applications, not mobile ones.
      operationId: Allcustomers.
      parameters:
      - name: identifier
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersResponse'
      deprecated: false
  /customers/{customer_id}:
    get:
      tags:
      - Customers
      summary: Show customer
      description: Returns the customer object.
      operationId: Showcustomer
      parameters:
      - name: customer_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    delete:
      tags:
      - Customers
      summary: Remove a customer
      description: >
        Deletes a customer, returning the customer object.

        Revokes all consents for this customer.

        This route is available only for web applications.
      operationId: Removeacustomer
      parameters:
      - name: customer_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovedCustomerResponse'
        400:
          description: We have received some other request format instead of JSON, or the body could not be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /customers/{customer_id}/lock:
    put:
      tags:
      - Customers
      summary: Lock customer
      description: >2

        Locks a customer and its data, returning the customer object.


        All customer related data including connections, accounts, transactions, attempts will not be available for reading, updating or deleting even by Salt Edge.

        This route is available only for web applications.
      operationId: Lockcustomer
      parameters:
      - name: customer_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockedCustomerResponse'
        400:
          description: We have received some other request format instead of JSON, or the body could not be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /customers/{customer_id}/unlock:
    put:
      tags:
      - Customers
      summary: Unlock customer
      description: >
        Unlocks a customer and its data, returning the customer object.

        This route is available only for web applications.
      operationId: Unlockcustomer
      parameters:
      - name: customer_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnlockedCustomerResponse'
        400:
          description: We have received some other request format instead of JSON, or the body could not be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /holder_info:
    get:
      tags:
      - Holder Info
      summary: Holder info
      description: >
        You can query essential information about the account holder.

        Make sure to request this feature to be [enabled](#know_your_customer) for your client account.
      operationId: Holderinfo
      parameters:
      - name: connection_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderInfoResponse'
      deprecated: false
  /merchants:
    post:
      tags:
      - Merchants
      summary: List of merchants
      description: List of merchants
      operationId: Listofmerchants
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantResponse'
              example:
                data:
                - id: f6dabf8bb3e1cbc7cce2f4571...
                  names:
                  - mode: name
                    value: Amazon
                  - mode: transliterated_name
                    value: amazon
                  contact:
                  - mode: website
                    value: www.amazon.com
                  address:
                    country_code: GB
                - id: ae316a83508ecaa8897e90321...
                  names:
                  - mode: name
                    value: Boots
                  - mode: transliterated_name
                    value: boots
                  - mode: operator
                    value: Boots Uk Limited
                  contact:
                  - mode: phone
                    value: +44 20 73818651
                  - mode: website
                    value: http://www.boots.com/stores/773-london-fulham-palace-road-w6-9pa
                  address:
                    country_code: GB
                    city: London
                    transliterated_city: london
                    street: Fulham Palace Road
                    transliterated_street: fulham palace road
                    post_code: W6 9Pa
                    coordinates: '{"latitude":"51.48467107","longitude":"-0.220126411"}'
                    extra:
                      building_number: 198-200
                      shop_number: 773
                      type_of_shop: Chemist
        406:
          description: More than 100 objects were sent in the request (100 is the limit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /oauth_providers/authorize:
    put:
      tags:
      - Oauth Providers
      summary: Authorize a connection
      description: >
        Used to authorize a connection for an OAuth provider when using client owned [provider keys](/general/#client_provider_keys). In this flow, once the end-user will be authorized on the provider's side, they will be redirected to the `return_to` URL indicated in the [previous request](#oauth_providers-create), with a bunch of parameters appended to it by the provider that are needed for authorizing the connection.
      operationId: Authorizeaconnection
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthAuthorizeRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthAuthorizedResponse'
        400:
          description: The JSON request is incorrectly formed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        409:
          description: The connection was already authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /oauth_providers/create:
    post:
      tags:
      - Oauth Providers
      summary: Create connection for OAuth provider
      description: >
        Used to create a connection for an OAuth provider.

        After receiving the response, the customer will be redirected to `return_to` URL.


        Mobile clients receive a `connection_secret` parameter in the `return_to` URL if the connection was successfully connected and an `error_message` parameter if the connection failed to connect for some reason.
      operationId: CreateconnectionforOAuthprovider
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthConnectRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthConnectResponse'
              example:
                data:
                  connection_id: 111111111111111111
                  connection_secret: secret
                  attempt_id: 777777777777777777
                  token: GENERATED_TOKEN
                  expires_at: 2021-01-28T16:03:10Z
                  redirect_url: https://www.saltedge.com/api/v5/oauth_providers/redirect?token=GENERATED_TOKEN
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Invalid consent period_days value or not allowed by provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /oauth_providers/reconnect:
    post:
      tags:
      - Oauth Providers
      summary: Reconnect OAuth connection
      description: >
        Used to reconnect a connection for an OAuth provider.

        After receiving the response, the customer will be redirected to the `return_to` URL.


        Mobile clients receive a `connection_secret` parameter in the `return_to` URL if the connection was successfully connected and an `error_message` parameter if the connection failed to connect for some reason.
      operationId: ReconnectOAuthconnection
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OauthReconnectRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OauthConnectResponse'
              example:
                data:
                  connection_id: 111111111111111111
                  connection_secret: secret
                  attempt_id: 777777777777777777
                  token: GENERATED_TOKEN
                  expires_at: 2021-01-28T16:03:10Z
                  redirect_url: https://www.saltedge.com/connect?token=GENERATED_TOKEN
        400:
          description: The passed `from_date` - `to_date` interval is out of consent `from_date` - `to_date` range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: We could not find a connection with the requested `connection_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Invalid consent period_days value or not allowed by provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /providers/{provider_code}:
    get:
      tags:
      - Providers
      summary: Show a provider
      description: >
        Allows you to inspect a single provider in order to give

        your users a proper interface to input their credentials.

        The response will have an array of `required_fields` and `interactive_fields`,

        which are explained in more detail in [the create section](#connections-create) of this reference.
      operationId: Showaprovider
      parameters:
      - name: provider_code
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
        404:
          description: Sending a `provider_code` that is not present in our system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /providers:
    get:
      tags:
      - Providers
      summary: List of providers
      description: >
        Returns all the providers we operate with.

        If a provider becomes `disabled`, it is not included in the list.
      operationId: Listofproviders
      parameters:
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: from_date
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
          format: date
          nullable: true
      - name: country_code
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: mode
        in: query
        description: ''
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/mode3'
      - name: include_fake_providers
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: boolean
      - name: include_provider_fields
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: boolean
      - name: provider_key_owner
        in: query
        description: ''
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/provider_key_owner'
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvidersResponse'
              example:
                data:
                - id: 123
                  code: fakebank_image_xf
                  name: Fake Bank with Image
                  mode: web
                  status: active
                  automatic_fetch: false
                  customer_notified_on_sign_in: true
                  interactive: true
                  identification_mode: saltedge
                  instruction: Please fill in all the fields.
                  home_url: http://example.com
                  login_url: http://example.com/login
                  logo_url: https://cdn.com/logos/providers/xf/fake.svg
                  country_code: XF
                  refresh_timeout: 60
                  holder_info:
                  - names
                  - emails
                  - phone_numbers
                  max_consent_days: 10
                  created_at: 2021-01-18T15:03:10Z
                  updated_at: 2021-01-23T15:03:10Z
                  timezone: Europe/London
                  max_interactive_delay: 480
                  optional_interactivity: true
                  regulated: false
                  max_fetch_interval: 60
                  supported_fetch_scopes:
                  - accounts
                  - transactions
                  supported_account_extra_fields: []
                  supported_transaction_extra_fields: []
                  supported_account_natures:
                  - account
                  - card
                  supported_account_types:
                  - personal
                  identification_codes:
                  - 123123
                  bic_codes:
                  - ABCDEFGH
                  supported_iframe_embedding: true
                  payment_templates:
                  - SEPA
                  supported_payment_fields:
                    SEPA:
                    - amount
                    - creditor_iban
                    - creditor_name
                    - currency_code
                    - customer_ip_address
                    - description
                    - end_to_end_id
                  required_payment_fields:
                    SEPA:
                    - amount
                    - creditor_iban
                    - creditor_name
                    - currency_code
                    - customer_ip_address
                    - description
                    - end_to_end_id
        400:
          description: Sending a date value that does not fit in admissible range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /rates:
    get:
      tags:
      - Rates
      summary: List of rates
      description: >
        You can get the list of all the currency rates that we support.

        You will receive the currency rates starting March 21, 2014.

        If any older date is requested, you will still receive the rates starting March 21, 2014.
      operationId: Listofrates
      parameters:
      - name: date
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatesResponse'
        400:
          description: Sending a date value that does not fit in admissible range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /reports:
    post:
      tags:
      - Reports
      summary: Create Financial Insights report
      description: >
        Allows you to create a report for a [customer](#customers) for a specific date range.
      operationId: CreateFinancialInsightsreport
      parameters:
      - name: customer_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: report_types
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/report_type2'
      - name: currency_code
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: to_date
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedReportResponse'
              example:
                data:
                  id: 999999999999999999
                  customer_id: 222222222222222222
                  customer_identifier: test@email.com
                  connection_ids:
                  - 111111111111111111
                  - 111111111111111112
                  - 111111111111111113
                  status: initialized
                  created_at: 2021-01-28T15:03:10Z
        400:
          description: We have received a wrong report type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: A customer with such `customer_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: Invalid `to_date` value, whether out of range or wrong date format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    get:
      tags:
      - Reports
      summary: List of reports
      description: Returns all the general available reports for a customer.
      operationId: Listofreports
      parameters:
      - name: customer_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsResponse'
              example:
                data:
                - id: 999999999999999990
                  customer_id: 222222222222222222
                  customer_identifier: test@email.com
                  connection_ids:
                  - 111111111111111111
                  - 111111111111111112
                  status: success
                  created_at: 2021-01-27T15:03:10Z
                - id: 999999999999999991
                  customer_id: 222222222222222222
                  customer_identifier: test@email.com
                  connection_ids:
                  - 111111111111111113
                  - 111111111111111114
                  status: success
                  created_at: 2021-01-27T15:03:10Z
      deprecated: false
  /reports/{report_id}:
    delete:
      tags:
      - Reports
      summary: Removes a report.
      description: Removes a report.
      operationId: Removesareport.
      parameters:
      - name: report_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovedReportResponse'
              example:
                data:
                  id: 999999999999999999
                  deleted: true
        404:
          description: The requested Financial Insights `id` was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    get:
      tags:
      - Reports
      summary: Show a report.
      description: Shows the generated report with all the details.
      operationId: Showareport.
      parameters:
      - name: report_id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        404:
          description: The requested Financial Insights `id` was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /transactions/duplicate:
    put:
      tags:
      - Transactions
      summary: Mark as duplicate
      description: Mark a list of transactions as `duplicated`.
      operationId: Markasduplicate
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateTransactionsRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicatedTransactionResponse'
              example:
                data:
                  duplicated: true
        400:
          description: The JSON request is incorrectly formed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: The client is in `restricted` status. You can find out more about `restricted` status on [Restricted](<%= general_link('restricted') %>) guides page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /transactions/unduplicate:
    put:
      tags:
      - Transactions
      summary: Remove duplicate flag
      description: Remove the duplicated flag from a list of transactions.
      operationId: Removeduplicateflag
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnduplicateTransactionsRequestBody'
        required: false
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnduplicatedTransactionResponse'
              example:
                data:
                  unduplicated: true
        400:
          description: The JSON request is incorrectly formed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: The client is in `restricted` status. You can find out more about `restricted` status on [Restricted](<%= general_link('restricted') %>) guides page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /transactions/duplicates:
    get:
      tags:
      - Transactions
      summary: List of duplicated transactions
      description: You can see the list of the duplicated transactions of an account.
      operationId: Listofduplicatedtransactions
      parameters:
      - name: account_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        400:
          description: Sending a value (e.g. `id`) which exceeds integer limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: An account with the sent `account_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /transactions:
    get:
      tags:
      - Transactions
      summary: List of transactions
      description: You can see the list of non-duplicated transactions of an account.
      operationId: Listoftransactions
      parameters:
      - name: account_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        400:
          description: Sending a value (e.g. `id`) which exceeds integer limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: An account with the sent `account_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
    delete:
      tags:
      - Transactions
      summary: Remove transactions
      description: Remove transactions older than a specified period.
      operationId: Removetransactions
      parameters:
      - name: account_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: customer_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: keep_days
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovedTransactionsResponse'
              example:
                data:
                  cleanup_started: true
        404:
          description: An account with the sent `account_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        406:
          description: The client is in `restricted` status. You can find out more about `restricted` status on [Restricted](<%= general_link('restricted') %>) guides page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
  /transactions/pending:
    get:
      tags:
      - Transactions
      summary: List of pending transactions
      description: You can use this route to obtain the currently pending transactions for an account.
      operationId: Listofpendingtransactions
      parameters:
      - name: account_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: from_id
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: connection_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        400:
          description: Sending a value (e.g. `id`) which exceeds integer limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: An account with the sent `account_id` could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: false
components:
  schemas:
    Account:
      title: Account
      required:
      - id
      - name
      - nature
      - balance
      - currency_code
      - extra
      - connection_id
      - created_at
      - updated_at
      type: object
      properties:
        id:
          type: string
          description: the `id` of the account
        name:
          type: string
          description: >-
            the unique name of the account


            <strong>Note:</strong> The name directly identifies the account. In case the account’s name has changed (in the bank’s WEB/API interface, through code changes, etc.) a new account will be created.
        nature:
          $ref: '#/components/schemas/Nature'
        balance:
          type: number
          description: the account's current balance
        currency_code:
          type: string
          description: >-
            one of the possible values for [currency codes](#currencies). Maximum 3 letters.


            <strong>Note:</strong> The currency directly identifies the account. In case the account’s currency code has changed (in the bank’s WEB/API interface, through code changes, etc.) a new account will be created.
        extra:
          $ref: '#/components/schemas/AccountExtra'
        connection_id:
          type: string
          description: the `id` of the connection the account belongs to
        created_at:
          type: string
          description: time and date when the account was imported
          format: date-time
        updated_at:
          type: string
          description: the last time when the account's balance was changed or new transactions were imported
          format: date-time
    AccountExtra:
      title: AccountExtra
      type: object
      properties:
        account_name:
          type: string
          description: changeable name of the account
        account_number:
          type: string
          description: internal bank account number
        assets:
          type: array
          items:
            type: string
          description: array of crypto codes and their amounts assigned to investment account
        available_amount:
          type: number
          description: available amount in the account's currency
        balance_type:
          type: string
          description: >-
            __Examples:__ `interimAvailable`, `closingBooked`, `interimBooked`, `authorised`, `expected`, `BOOKED`, `CLAV`, `CLBD`, `XPCD`, `OTHR`, etc.


            __Note:__ The value is specific to the financial institution and can vary depending on the API standard, the bank's implementation, the account's type, country/region peculiarities, etc. This field holds an informative meaning. Usually, it is used to verify the balance consistency between customers of the same bank or between banks within the same country.
        blocked_amount:
          type: number
          description: the amount currently blocked in account's currency
        card_type:
          $ref: '#/components/schemas/CardType'
        cards:
          type: array
          items:
            type: string
          description: list of masked card numbers linked to the account
        client_name:
          type: string
          description: account client owner
        closing_balance:
          type: number
          description: account balance at the end of an accounting period
        credit_limit:
          type: number
          description: maximum amount of money that is allowed to be spent in account's currency
        current_date:
          type: string
          description: date of provider statement generation (applicable to banks)
          format: date
        current_time:
          type: string
          description: time of provider statement generation (applicable to banks)
          format: date-time
        expiry_date:
          type: string
          description: card expiry date
          format: date
        iban:
          type: string
          description: account's IBAN
        interest_rate:
          type: number
          description: interest rate of the account as percentage value
        next_payment_amount:
          type: number
          description: next payment amount for loans or credits
        next_payment_date:
          type: string
          description: next payment date for loans or credits
          format: date
        open_date:
          type: string
          description: the date when any type of account/card was opened
          format: date
        opening_balance:
          type: number
          description: account balance that is brought forward from the end of one accounting period to the beginning of a new accounting period
        partial:
          type: boolean
          description: account transactions were not imported or imported partially because of some internal error on the provider's side
        sort_code:
          type: string
          description: routing number(US)/BSB code(Australia)/sort code(UK)
        statement_cut_date:
          type: string
          description: date when current statement becomes previous one
          format: date
        status:
          type: string
          description: shows whether the account is `active` or `inactive`
        swift:
          type: string
          description: account SWIFT code
        total_payment_amount:
          type: number
          description: total payment amount for loans or credits
        transactions_count:
          $ref: '#/components/schemas/TransactionsCount'
        payment_type:
          type: string
          description: account payment method
        cashback_amount:
          type: number
          description: accumulated CashBack / Cash Benefit
        monthly_total_payment:
          type: number
          description: the amount a borrower was paid for a month
        minimum_payment:
          type: number
          description: the lowest amount you can pay on your credit card to avoid penalties
        premium_frequency:
          type: string
          description: frequency of premium payments
        policy_status:
          type: string
          description: current policy status
        life_assured_name:
          type: string
          description: name of the person who is assured
        premium_amount:
          type: number
          description: premium amount to be paid
        single_premium_amount:
          type: number
          description: single premium amount to be paid
        financial_consultant:
          type: string
          description: financial consultant name
        total_reversionary_bonus:
          type: number
          description: reversionary bonus accumulated amount
        gross_surrender:
          type: number
          description: current Gross Surrender value
        guaranteed_gross_surrender:
          type: number
          description: guaranteed Gross Surrender value
        reversionary_bonus_cash_value:
          type: number
          description: cash value of reversionary bonus
        owned_policy_amount:
          type: number
          description: amount currently own on policy
        policy_loan_limit:
          type: number
          description: maximum amount of additional Policy Loan
        policy_converted_to_paid_up:
          type: number
          description: new assured sum if Policy is converted to paid up
        paid_up_conversion_reversionary_bonus:
          type: number
          description: reversionary bonus amount after `Policy to paid up` conversion
        policy_components:
          type: object
          description: policy components with own values such as (`status`, `amount_assured`, `amount_premium`, `start_date`, `expiry_date`, `premium_expiry_date`, `assured_name`)"
        investment_amount:
          type: number
          description: total invested amount
        unit_price:
          type: number
          description: price per unit (used with units)
        units:
          type: number
          description: amount of units owned (used with unit_price)
        indicative_unit_price:
          type: number
          description: indicative price per unit (used with units)
        interest_income:
          type: number
          description: amount of interest income/profit
        interest_amount:
          type: number
          description: interest amount in currency
        profit_amount:
          type: number
          description: amount of profit/loss of investment account
        profit_rate:
          type: number
          description: investment account rate of profit/loss as percentage value
        asset_class:
          type: string
          description: class of investment asset
        product_type:
          type: string
          description: investment product type
        total_unit_value:
          type: number
          description: total units value of fund holding
        fund_holdings:
          type: object
          description: fund holdings list with own values such as (`investment_percentage`, `balance`, `bid_price`, `value`, `value_date`, `total_quantity`, `available_quantity`, `actual_price`, `actual_value`)"
    GeneralAccountExtra:
      title: GeneralAccountExtra
      type: object
      properties:
        account_name:
          type: string
          description: changeable name of the account
        account_number:
          type: string
          description: internal bank account number
        assets:
          type: array
          items:
            type: string
          description: array of crypto codes and their amounts assigned to investment account
        available_amount:
          type: number
          description: available amount in the account's currency
        balance_type:
          type: string
          description: >-
            __Examples:__ `interimAvailable`, `closingBooked`, `interimBooked`, `authorised`, `expected`, `BOOKED`, `CLAV`, `CLBD`, `XPCD`, `OTHR`, etc.


            __Note:__ The value is specific to the financial institution and can vary depending on the API standard, the bank's implementation, the account's type, country/region peculiarities, etc. This field holds an informative meaning. Usually, it is used to verify the balance consistency between customers of the same bank or between banks within the same country.
        blocked_amount:
          type: number
          description: the amount currently blocked in account's currency
        card_type:
          $ref: '#/components/schemas/CardType'
        cards:
          type: array
          items:
            type: string
          description: list of masked card numbers linked to the account
        client_name:
          type: string
          description: account client owner
        closing_balance:
          type: number
          description: account balance at the end of an accounting period
        credit_limit:
          type: number
          description: maximum amount of money that is allowed to be spent in account's currency
        current_date:
          type: string
          description: date of provider statement generation (applicable to banks)
          format: date
        current_time:
          type: string
          description: time of provider statement generation (applicable to banks)
          format: date-time
        expiry_date:
          type: string
          description: card expiry date
          format: date
        iban:
          type: string
          description: account's IBAN
        interest_rate:
          type: number
          description: interest rate of the account as percentage value
        next_payment_amount:
          type: number
          description: next payment amount for loans or credits
        next_payment_date:
          type: string
          description: next payment date for loans or credits
          format: date
        open_date:
          type: string
          description: the date when any type of account/card was opened
          format: date
        opening_balance:
          type: number
          description: account balance that is brought forward from the end of one accounting period to the beginning of a new accounting period
        partial:
          type: boolean
          description: account transactions were not imported or imported partially because of some internal error on the provider's side
        sort_code:
          type: string
          description: routing number(US)/BSB code(Australia)/sort code(UK)
        statement_cut_date:
          type: string
          description: date when current statement becomes previous one
          format: date
        status:
          type: string
          description: shows whether the account is `active` or `inactive`
        swift:
          type: string
          description: account SWIFT code
        total_payment_amount:
          type: number
          description: total payment amount for loans or credits
        transactions_count:
          $ref: '#/components/schemas/TransactionsCount'
        payment_type:
          type: string
          description: account payment method
        cashback_amount:
          type: number
          description: accumulated CashBack / Cash Benefit
        monthly_total_payment:
          type: number
          description: the amount a borrower was paid for a month
        minimum_payment:
          type: number
          description: the lowest amount you can pay on your credit card to avoid penalties
    InvestmentAccountExtra:
      title: InvestmentAccountExtra
      type: object
      properties:
        investment_amount:
          type: number
          description: total invested amount
        unit_price:
          type: number
          description: price per unit (used with units)
        units:
          type: number
          description: amount of units owned (used with unit_price)
        indicative_unit_price:
          type: number
          description: indicative price per unit (used with units)
        interest_income:
          type: number
          description: amount of interest income/profit
        interest_amount:
          type: number
          description: interest amount in currency
        profit_amount:
          type: number
          description: amount of profit/loss of investment account
        profit_rate:
          type: number
          description: investment account rate of profit/loss as percentage value
        asset_class:
          type: string
          description: class of investment asset
        product_type:
          type: string
          description: investment product type
        total_unit_value:
          type: number
          description: total units value of fund holding
        fund_holdings:
          type: object
          description: fund holdings list with own values such as (`investment_percentage`, `balance`, `bid_price`, `value`, `value_date`, `total_quantity`, `available_quantity`, `actual_price`, `actual_value`)"
    InsuranceAccountExtra:
      title: InsuranceAccountExtra
      type: object
      properties:
        premium_frequency:
          type: string
          description: frequency of premium payments
        policy_status:
          type: string
          description: current policy status
        life_assured_name:
          type: string
          description: name of the person who is assured
        premium_amount:
          type: number
          description: premium amount to be paid
        single_premium_amount:
          type: number
          description: single premium amount to be paid
        financial_consultant:
          type: string
          description: financial consultant name
        total_reversionary_bonus:
          type: number
          description: reversionary bonus accumulated amount
        gross_surrender:
          type: number
          description: current Gross Surrender value
        guaranteed_gross_surrender:
          type: number
          description: guaranteed Gross Surrender value
        reversionary_bonus_cash_value:
          type: number
          description: cash value of reversionary bonus
        owned_policy_amount:
          type: number
          description: amount currently own on policy
        policy_loan_limit:
          type: number
          description: maximum amount of additional Policy Loan
        policy_converted_to_paid_up:
          type: number
          description: new assured sum if Policy is converted to paid up
        paid_up_conversion_reversionary_bonus:
          type: number
          description: reversionary bonus amount after `Policy to paid up` conversion
        policy_components:
          type: object
          description: policy components with own values such as (`status`, `amount_assured`, `amount_premium`, `start_date`, `expiry_date`, `premium_expiry_date`, `assured_name`)"
    AccountsResponse:
      title: AccountsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
          description: ''
        meta:
          $ref: '#/components/schemas/MetaObject'
    AssetsResponse:
      title: AssetsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Datum'
          description: ''
    Attempt:
      title: Attempt
      required:
      - api_mode
      - api_version
      - automatic_fetch
      - daily_refresh
      - categorization
      - created_at
      - custom_fields
      - device_type
      - remote_ip
      - exclude_accounts
      - user_present
      - customer_last_logged_at
      - fail_at
      - fail_error_class
      - fail_message
      - fetch_scopes
      - finished
      - finished_recent
      - from_date
      - id
      - interactive
      - locale
      - partial
      - store_credentials
      - success_at
      - to_date
      - updated_at
      - show_consent_confirmation
      - include_natures
      - stages
      type: object
      properties:
        api_mode:
          $ref: '#/components/schemas/ApiMode'
        api_version:
          type: string
          description: the API version in which the attempt was created
        automatic_fetch:
          type: boolean
          description: whether the connection related to the attempt can be automatically fetched
        daily_refresh:
          type: boolean
          description: latest assigned value for `daily_refresh` in connection
        categorization:
          $ref: '#/components/schemas/Categorization'
        created_at:
          type: string
          description: when the attempt was made
          format: date-time
        custom_fields:
          type: object
          description: the custom fields that had been sent when creating connection/connect\_session/oauth\_provider
        device_type:
          $ref: '#/components/schemas/DeviceType'
        remote_ip:
          type: string
          description: the IP of the device that created the attempt
        exclude_accounts:
          type: array
          items:
            type: string
          description: the `ids` of accounts that do not need to be refreshed
        user_present:
          type: boolean
          description: whether the request was initiated by the end-user of your application
        customer_last_logged_at:
          type: string
          description: the datetime when user was last active in your application
          format: date-time
        fail_at:
          type: string
          description: when the attempt failed to finish
          format: date-time
        fail_error_class:
          type: string
          description: class of error that triggered the fail for attempt
        fail_message:
          type: string
          description: message that describes the error class
        fetch_scopes:
          type: array
          items:
            $ref: '#/components/schemas/FetchScope'
          description: fetching mode.
        finished:
          type: boolean
          description: whether the connection had finished fetching
        finished_recent:
          type: boolean
          description: whether the connection had finished data for recent range
        from_date:
          type: string
          description: date from which the data had been fetched
          format: date
        id:
          type: string
          description: '`id` of the attempt'
        interactive:
          type: boolean
          description: whether the connection related to the attempt is interactive
        locale:
          type: string
          description: "the language of the Connect widget or/and provider error message in the <a href='http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes' target=\"_blank\">ISO 639-1</a> format. Possible values are: `bg`, `cz`, `de`, `en`, `es-MX`, `es`, `fr`, `he`, `hu`, `it`, `nl`, `pl`, `pt-BR`, `pt`, `ro`, `ru`, `sk`, `tr`, `uk`, `zh-HK`(Traditional), `zh`(Simplified). Defaults to `en`"
        partial:
          type: boolean
          description: whether the connection was partially fetched
        store_credentials:
          type: boolean
          description: whether the credentials were stored on our side
        success_at:
          type: string
          description: when the attempt succeeded and finished
          format: date-time
        to_date:
          type: string
          description: date until which the data has been fetched
          format: date-time
        updated_at:
          type: string
          description: when last attempt update occurred
          format: date-time
        show_consent_confirmation:
          type: boolean
          description: whether any consent was given for this connection
        include_natures:
          type: array
          items:
            type: string
          description: the natures of the accounts that need to be fetched
        stages:
          type: array
          items:
            $ref: '#/components/schemas/Stage'
          description: information about [stages](#attempts-stages) through which the connection has passed
    Stage:
      title: Stage
      required:
      - created_at
      - id
      - name
      - updated_at
      type: object
      properties:
        created_at:
          type: string
          description: when the stage was created
          format: date-time
        id:
          type: string
          description: the `id` of the stage
        interactive_fields_names:
          type: array
          items:
            type: string
          description: the interactive fields that are currently required by the provider. Appears only for the interactive connections
          nullable: true
        interactive_html:
          type: string
          description: HTML code that shows the current interactive state of the connection. Appears only for the interactive connections
          nullable: true
        name:
          $ref: '#/components/schemas/Name'
        updated_at:
          type: string
          description: when the stage was last updated
          format: date-time
    SimplifiedAttempt:
      title: SimplifiedAttempt
      type: object
      properties:
        api_mode:
          $ref: '#/components/schemas/ApiMode'
        api_version:
          type: string
          description: the API version in which the attempt was created
        automatic_fetch:
          type: boolean
          description: whether the connection related to the attempt can be automatically fetched
        daily_refresh:
          type: boolean
          description: latest assigned value for `daily_refresh` in connection
        categorization:
          $ref: '#/components/schemas/Categorization'
        created_at:
          type: string
          description: when the attempt was made
          format: date-time
        custom_fields:
          type: object
          description: the custom fields that had been sent when creating connection/connect\_session/oauth\_provider
        device_type:
          $ref: '#/components/schemas/DeviceType'
        remote_ip:
          type: string
          description: the IP of the device that created the attempt
        exclude_accounts:
          type: array
          items:
            type: string
          description: the `ids` of accounts that do not need to be refreshed
        user_present:
          type: boolean
          description: whether the request was initiated by the end-user of your application
        customer_last_logged_at:
          type: string
          description: the datetime when user was last active in your application
          format: date-time
        fail_at:
          type: string
          description: when the attempt failed to finish
          format: date-time
        fail_error_class:
          type: string
          description: class of error that triggered the fail for attempt
        fail_message:
          type: string
          description: message that describes the error class
        fetch_scopes:
          type: array
          items:
            $ref: '#/components/schemas/FetchScope'
          description: fetching mode.
        finished:
          type: boolean
          description: whether the connection had finished fetching
        finished_recent:
          type: boolean
          description: whether the connection had finished data for recent range
        from_date:
          type: string
          description: date from which the data had been fetched
          format: date
        id:
          type: string
          description: '`id` of the attempt'
        interactive:
          type: boolean
          description: whether the connection related to the attempt is interactive
        locale:
          type: string
          description: "the language of the Connect widget or/and provider error message in the <a href='http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes' target=\"_blank\">ISO 639-1</a> format. Possible values are: `bg`, `cz`, `de`, `en`, `es-MX`, `es`, `fr`, `he`, `hu`, `it`, `nl`, `pl`, `pt-BR`, `pt`, `ro`, `ru`, `sk`, `tr`, `uk`, `zh-HK`(Traditional), `zh`(Simplified). Defaults to `en`"
        partial:
          type: boolean
          description: whether the connection was partially fetched
        store_credentials:
          type: boolean
          description: whether the credentials were stored on our side
        success_at:
          type: string
          description: when the attempt succeeded and finished
          format: date-time
        to_date:
          type: string
          description: date until which the data has been fetched
          format: date-time
        updated_at:
          type: string
          description: when last attempt update occurred
          format: date-time
        show_consent_confirmation:
          type: boolean
          description: whether any consent was given for this connection
        include_natures:
          type: array
          items:
            type: string
          description: the natures of the accounts that need to be fetched
        last_stage:
          $ref: '#/components/schemas/Stage'
    AttemptsResponse:
      title: AttemptsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SimplifiedAttempt'
          description: ''
    AttemptResponse:
      title: AttemptResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Attempt'
    AttemptRequestBody:
      title: AttemptRequestBody
      required:
      - store_credentials
      type: object
      properties:
        fetch_scopes:
          type: array
          items:
            $ref: '#/components/schemas/FetchScope'
          description: fetching mode. Defaults to [consent](#consents-object) scopes. The allowed values for this parameter must comply to the [consent](#consents-object) `scopes` restriction.
        from_date:
          type: string
          description: date from which you want to fetch data for your connection. Defaults to [consent](#consents-object) `from_date`. The allowed values for this parameter must be within exactly 365 days ago and it should comply to the fetching period restrictions in the [consent](#consents-object).
          format: date
        to_date:
          type: string
          description: date until which you want to fetch data for your connection. Defaults to `null` (today). The allowed values for this parameter must be equal or more than `from_date` and less or equal than tomorrow. Also it should comply to the fetching period restrictions in the [consent](#consents-object).
          format: date
        fetched_accounts_notify:
          type: boolean
          description: whether Salt Edge should send a success callback after fetching accounts.
        custom_fields:
          type: object
          description: a JSON object, which will be sent back on any of your callbacks.
        locale:
          type: string
          description: "the language of the Connect widget or/and provider error message in the <a href='http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes' target=\"_blank\">ISO 639-1</a> format. Possible values are: `bg`, `cz`, `de`, `en`, `es-MX`, `es`, `fr`, `he`, `hu`, `it`, `nl`, `pl`, `pt-BR`, `pt`, `ro`, `ru`, `sk`, `tr`, `uk`, `zh-HK`(Traditional), `zh`(Simplified). Defaults to `en`"
        include_natures:
          type: array
          items:
            type: string
          description: the natures of the accounts that need to be fetched. Check [accounts attributes](#accounts-attributes) for possible values. If `null`, all accounts will be fetched.
          nullable: true
        customer_last_logged_at:
          type: string
          description: the datetime when user was last active in your application
          format: date-time
        exclude_accounts:
          type: array
          items:
            type: string
          description: array of [account `ids`](#accounts-list) which will not be fetched. Applied to `reconnect` and `refresh` atempts.
          default: []
        store_credentials:
          type: boolean
          description: whether the credentials should be stored on Salt Edge side
        user_present:
          type: boolean
          description: whether the request was initiated by the end-user of your application. It is taken into account only for PSD2-compliant providers and used for `reconnect` and `refresh`.
        return_to:
          type: string
          description: the URL the user will be redirected to, defaults to client's home URL. If the provider has `api` mode and interactive `true` then this field is `mandatory`.
    CategoriesRequestBody:
      title: CategoriesRequestBody
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data'
    LearnCategoryResponse:
      title: LearnCategoryResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data1'
    CategoriesResponse:
      title: CategoriesResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data2'
    ConnectSessionRequestBody:
      title: ConnectSessionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data3'
    ReconnectSessionRequestBody:
      title: ReconnectSessionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data4'
    RefreshSessionRequestBody:
      title: RefreshSessionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data5'
    ConnectSessionResponse:
      title: ConnectSessionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data6'
    Connection:
      title: Connection
      required:
      - id
      - secret
      - provider_id
      - provider_code
      - provider_name
      - daily_refresh
      - customer_id
      - created_at
      - updated_at
      - last_success_at
      - status
      - country_code
      - store_credentials
      - last_attempt
      - show_consent_confirmation
      - last_consent_id
      type: object
      properties:
        id:
          type: string
          description: the `id` of the connection
        secret:
          type: string
          description: the secret key associated with a specific `connection`. It allows to read the information related to a connection using API keys of type `app`.
        provider_id:
          type: string
          description: the `id` of the provider the connection belongs to
        provider_code:
          type: string
          description: the code of the provider the connection belongs to
        provider_name:
          type: string
          description: the name of the provider the connection belongs to
        daily_refresh:
          type: boolean
          description: whether the connection will be refreshed daily
        customer_id:
          type: string
          description: customer's `id`
        created_at:
          type: string
          description: time and date when the connection was added
          format: date-time
        updated_at:
          type: string
          description: the last time when the connection's balance was changed, new accounts were imported or new transactions added/removed
          format: date-time
        last_success_at:
          type: string
          description: time when the connection was successfully fetched
          format: date-time
        status:
          $ref: '#/components/schemas/Status'
        country_code:
          type: string
          description: code of the country the provider belongs to
        next_refresh_possible_at:
          type: string
          description: when the next refresh will be available. May contain `null` value if connection has `automatic_fetch` set as `false`, or is already processing
          format: date-time
        store_credentials:
          type: boolean
          description: whether the credentials were stored on our side
        last_attempt:
          $ref: '#/components/schemas/SimplifiedAttempt'
        show_consent_confirmation:
          type: boolean
          description: whether any consent was given for this connection on Salt Edge side
        last_consent_id:
          type: string
          description: the `id` of the last [consent](#consents)
      description: >-
        A connection represents a set of credentials required to access the [accounts](#accounts) and [transactions](#transactions)

        through a specific [provider](#providers).
    CreateConnectionRequestBody:
      title: CreateConnectionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data7'
    ConnectionResponse:
      title: ConnectionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Connection'
    ConnectionsResponse:
      title: ConnectionsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
          description: ''
        meta:
          $ref: '#/components/schemas/MetaObject'
    InteractiveConnectionRequestBody:
      title: InteractiveConnectionRequestBody
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data8'
    ReconnectConnectionRequestBody:
      title: ReconnectConnectionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data9'
    RefreshConnectionRequestBody:
      title: RefreshConnectionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data10'
    RemovedConnectionResponse:
      title: RemovedConnectionResponse
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data11'
    UpdateConnectionRequestBody:
      title: UpdateConnectionRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data12'
    Consent:
      title: Consent
      required:
      - id
      - connection_id
      - customer_id
      - scopes
      - period_days
      - expires_at
      - from_date
      - to_date
      - collected_by
      - revoked_at
      - revoke_reason
      - created_at
      - updated_at
      type: object
      properties:
        id:
          type: string
          description: the `id` of the consent
        connection_id:
          type: string
          description: the `id` of the [connection](#connections)
        customer_id:
          type: string
          description: the `id` of the [customer](#customers)
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
          description: data that is allowed to be fetched.
        period_days:
          type: integer
          description: the period the consent will be valid for
          format: int32
        expires_at:
          type: string
          description: the date when the consent will expire
          format: date-time
        from_date:
          type: string
          description: the date from which the data has been allowed to be fetched
          format: date
        to_date:
          type: string
          description: the date until which the data has been allowed to be fetched
          format: date
        collected_by:
          $ref: '#/components/schemas/CollectedBy'
        revoked_at:
          type: string
          description: the date when consent was revoked
          format: date-time
        revoke_reason:
          $ref: '#/components/schemas/RevokeReason'
        created_at:
          type: string
          description: when the consent was created
          format: date-time
        updated_at:
          type: string
          description: when the consent was updated
          format: date-time
    ConsentResponse:
      title: ConsentResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Consent'
    ConsentsResponse:
      title: ConsentsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Consent'
          description: ''
        meta:
          $ref: '#/components/schemas/MetaObject'
    ConsentRequestBody:
      title: ConsentRequestBody
      required:
      - scopes
      type: object
      properties:
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
          description: >-
            data to be allowed for fetching.


            The allowed values for this parameter must fall within the client's `allowed_fetch_scopes` and/or provider's `supported_fetch_scopes` restrictions. To change the client's allowed scopes, please <a href='https://www.saltedge.com/pages/contact' target="_blank">contact our Sales team</a>.
        from_date:
          type: string
          description: date to be allowed for fetching the data from. Defaults to `90 days ago` (only for the providers with `regulated:true`). This parameter is used when `scopes` parameter contains `transactions_details`. The allowed values for this parameter must be within exactly 365 days ago.
          format: date
        to_date:
          type: string
          description: date to be allowed for fetching the data until. The allowed values for this parameter must be equal or more than `from_date`.
          format: date
          nullable: true
        period_days:
          type: integer
          description: determines the period the consent will be valid for. Defaults to `null` (limitless) or provider's `max_consent_days`. The allowed value for this parameter must not be higher than the provider's `max_consent_days`.
          format: int32
    Country:
      title: Country
      required:
      - name
      - code
      - refresh_start_time
      type: object
      properties:
        name:
          type: string
          description: Name of the country.
        code:
          type: string
          description: Country code as dated in ISO 3166-1 alpha-2
        refresh_start_time:
          $ref: '#/components/schemas/RefreshStartTime'
      description: >-
        The country is represented just as a string.

        We're using <a href='http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2' target="_blank">ISO 3166-1 alpha-2</a> country codes.

        Thus, all the country codes will have exactly two uppercase letters.

        There are two special cases:


        - "Other", encoded as `XO`

        - "Fake", encoded as `XF`


        Note that the Fake country is only available for clients in [Test](/general/#test)

        and [Pending](/general/#pending) statuses.
    CountriesResponse:
      title: CountriesResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Country'
          description: ''
    Currency:
      title: Currency
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
          description: ISO 4217 currency code
        name:
          type: string
          description: Currency name in US English
      description: >-
        The currency is represented just as a string.

        We use <a href='http://en.wikipedia.org/wiki/ISO_4217' target="_blank">ISO 4217</a> currency codes.

        Thus, all the currency codes will have exactly three uppercase letters.

        If certain currencies no longer exist, we will still support them for the transactions held in those currencies.

        Example:


        - Zambian Kwacha `ZMK` (old currency code)

        - Zambian Kwacha `ZMW` (new currency code)


        both of them are supported.
    CurrenciesResponse:
      title: CurrenciesResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
          description: ''
    Customer:
      title: Customer
      required:
      - id
      - identifier
      - secret
      type: object
      properties:
        id:
          type: integer
          description: Creates a customer, returning the customer object.
          format: int32
        identifier:
          type: string
          description: A unique identifier of the new customer.
        secret:
          type: string
          description: Customer secret.
      description: A `Customer` represents a single end-user of the Account Information API. The customer uses the API to create `Connections`, i.e. bank connections, that are further used to aggregate the customer's financial data.
    CustomerRequestBody:
      title: CustomerRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data13'
      description: Customer object.
    CustomerResponse:
      title: CustomerResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Customer'
    CreatedCustomerResponse:
      title: CreatedCustomerResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Customer'
    LockedCustomerResponse:
      title: LockedCustomerResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data14'
    UnlockedCustomerResponse:
      title: UnlockedCustomerResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data15'
    RemovedCustomerResponse:
      title: RemovedCustomerResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data16'
    CustomersResponse:
      title: CustomersResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: ''
        meta:
          $ref: '#/components/schemas/MetaObject'
      description: A list of all customers.
    HolderInfoResponse:
      title: HolderInfoResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/HolderInfo'
    HolderInfo:
      title: HolderInfo
      required:
      - name
      - emails
      - phone_numbers
      - addresses
      type: object
      properties:
        ssn:
          type: string
          description: Social Security Number shortened (last 4 digits)
        cpf:
          type: string
          description: Cadastro de Pessoas Físicas (present in Brazil)
        name:
          type: array
          items:
            type: string
          description: account holder's name(s)
        emails:
          type: array
          items:
            type: string
          description: account holder's email(s)
        phone_numbers:
          type: array
          items:
            type: string
          description: account holder's phone number(s)
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: account holder's address(es)
    HolderInfoExtra:
      title: HolderInfoExtra
      type: object
      properties:
        ssn:
          type: string
          description: Social Security Number shortened (last 4 digits)
        cpf:
          type: string
          description: Cadastro de Pessoas Físicas (present in Brazil)
    Merchant:
      title: Merchant
      required:
      - id
      - names
      - address
      - contact
      type: object
      properties:
        id:
          type: string
          description: the `id` of the merchant
        names:
          type: array
          items:
            $ref: '#/components/schemas/Name1'
          description: merchant names that are used to name a company, corporation, brand name, franchise name or any other entity who is participating in  the customer's transaction.
        address:
          $ref: '#/components/schemas/MerchantAddress'
        contact:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: contact information via which the merchant can be accessed, eg. via website, phone or social media
      description: A merchant represents a `company` that sells goods or provides services to a `customer`.
    MerchantAddress:
      title: MerchantAddress
      type: object
      properties:
        city:
          type: string
        transliterated_city:
          type: string
        state:
          type: string
        street:
          type: string
        transliterated_street:
          type: string
        country_code:
          type: string
        post_code:
          type: string
        coordinates:
          type: string
        building_name:
          type: string
        shop_number:
          type: string
      description: merchant address
    MerchantRequestBody:
      title: MerchantRequestBody
      type: object
      properties:
        data:
          type: array
          items:
            type: string
          description: ''
    MerchantResponse:
      title: MerchantResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Merchant'
          description: ''
    OauthAuthorizeRequestBody:
      title: OauthAuthorizeRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data17'
    OauthAuthorizedResponse:
      title: OauthAuthorizedResponse
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data18'
    OauthConnectRequestBody:
      title: OauthConnectRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data19'
    OauthConnectResponse:
      title: OauthConnectResponse
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data20'
    OauthReconnectRequestBody:
      title: OauthReconnectRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data21'
    Provider:
      title: Provider
      required:
      - id
      - code
      - name
      - mode
      - status
      - automatic_fetch
      - customer_notified_on_sign_in
      - interactive
      - identification_mode
      - instruction
      - home_url
      - login_url
      - logo_url
      - country_code
      - refresh_timeout
      - holder_info
      - max_consent_days
      - created_at
      - updated_at
      - timezone
      - max_interactive_delay
      - optional_interactivity
      - regulated
      - max_fetch_interval
      - supported_fetch_scopes
      - supported_account_extra_fields
      - supported_transaction_extra_fields
      - supported_account_natures
      - supported_account_types
      - identification_codes
      - bic_codes
      - supported_iframe_embedding
      - payment_templates
      type: object
      properties:
        id:
          type: string
          description: the `id` of the provider
        code:
          type: string
          description: provider's code
        name:
          type: string
          description: provider's name
        mode:
          type: string
          description: >-
            possible values are:

              - `oauth` -- access through the bank's dedicated API (`regulated: true`). The user is redirected to the bank's page for authorization. For more details, check [OAuth providers](#oauth_providers).
              - `web` -- access through the bank's WEB interface using screen scraping technology. Therefore, a user undergoes the same authorization flow as in their bank's web interface with an identical set of credentials.
              - `api` -- access through a dedicated (`regulated: true`) or non-dedicated (`regulated: false`) bank's API. Some required credentials fields might be present which the user should complete (IBAN, username, etc.). In case of a dedicated API, an [interactive redirect](#connections-interactive) might be present, but there are required credentials fields which the user should complete (IBAN, username, etc.). Using these credentials, we authorize the user on the bank's side.
              - `file` -- access through uploading a file of certain format (XLS, CSV, etc.), which is processed to extract information of their accounts and transactions.
        status:
          $ref: '#/components/schemas/Status'
        automatic_fetch:
          type: boolean
          description: whether the provider's connections can be automatically fetched
        customer_notified_on_sign_in:
          type: boolean
          description: whether the provider will notify the customer on log in attempt
        interactive:
          type: boolean
          description: whether the provider requires interactive input
        identification_mode:
          $ref: '#/components/schemas/IdentificationMode'
        instruction:
          type: string
          description: guidance on how to connect the bank
        home_url:
          type: string
          description: the URL of the main page of the provider
        login_url:
          type: string
          description: point of entrance to provider's login web interface
        logo_url:
          type: string
          description: the URL for the provider logo, may have a placeholder for providers with missing logos
        country_code:
          type: string
          description: code of the provider's country
        refresh_timeout:
          type: integer
          description: amount of time (in minutes) after which the provider's connections are allowed to be refreshed
          format: int32
        holder_info:
          type: array
          items:
            type: string
          description: contains information on the account holder details that can be fetched from this provider
        max_consent_days:
          type: integer
          description: maximum allowed consent duration. If it is `null`, then there are no limits
          format: int32
        created_at:
          type: string
          description: time and date when the provider was integrated
          format: date-time
        updated_at:
          type: string
          description: the last time when any of provider's attributes were changed
          format: date-time
        timezone:
          type: string
          description: time zone data of capital/major city in a region corresponding to the provider
        max_interactive_delay:
          type: integer
          description: delay in seconds before `InteractiveAdapterTimeout` error will be raised
          format: int32
        optional_interactivity:
          type: boolean
          description: provider which supports flipping of the `interactive` and `automatic_fetch` flags after connect
        regulated:
          type: boolean
          description: whether the provider is integrated via a regulated channel under PSD2
        max_fetch_interval:
          type: integer
          description: Maximum period of days that a provider can return from its interface
          format: int32
        supported_fetch_scopes:
          type: array
          items:
            type: string
          description: array of strings with supported `fetch_scopes`
        supported_account_extra_fields:
          type: array
          items:
            type: string
          description: array of possible [account extra](#accounts-extra) fields to be fetched
        supported_transaction_extra_fields:
          type: array
          items:
            type: string
          description: array of possible [transaction extra](#transactions-extra) fields to be fetched
        supported_account_natures:
          type: array
          items:
            type: string
          description: array of possible [account natures](#accounts-attributes) to be fetched
        supported_account_types:
          type: array
          items:
            $ref: '#/components/schemas/SupportedAccountType'
          description: ''
        identification_codes:
          type: array
          items:
            type: string
          description: List of codes identifying supported branches of a specific provider. It may include BLZ(Germany), ABI+CAB(Italy), Branch Codes(France) etc.
        bic_codes:
          type: array
          items:
            type: string
          description: List of BIC codes identifying supported branches of a specific provider.
        supported_iframe_embedding:
          type: boolean
        payment_templates:
          type: array
          items:
            type: string
          description: identifiers of the [payment templates](/payment_initiation/v1/#payment_templates) that are supported by this provider
        supported_payment_fields:
          type: object
          description: list of supported payment fields for a payment template
        required_payment_fields:
          type: object
          description: list of supported payment fields for a payment template
      description: A provider is a source of financial data. We recommend you update all of the providers' fields at least daily.
    ProviderResponse:
      title: ProviderResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Provider'
    ProvidersResponse:
      title: ProvidersResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: ''
        meta:
          $ref: '#/components/schemas/MetaObject'
    MetaObject:
      title: MetaObject
      type: object
      properties:
        next_id:
          type: string
        next_page:
          type: string
      description: Metaobject that contains information about pagination.
    Rate:
      title: Rate
      required:
      - currency_code
      - rate
      - fail
      - issued_on
      type: object
      properties:
        currency_code:
          type: string
          description: the code of the currency
        rate:
          type: number
          description: the ratio of the currency in relation to the `USD` currency
        fail:
          type: boolean
          description: the field which shows if we have an up-to-date rate for the currency. If the flag is `true`, it means that the rate has been taken from the previous available date
        issued_on:
          type: string
          description: the date the rate has been issued on
          format: date
      description: A rate is an index of any currency value in relation to the USD currency.
    RatesResponse:
      title: RatesResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          description: ''
        meta:
          $ref: '#/components/schemas/Meta'
    CreatedReportResponse:
      title: CreatedReportResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BasicReport'
    ReportResponse:
      title: ReportResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FullReport'
    ReportsResponse:
      title: ReportsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BasicReport'
          description: ''
    RemovedReportResponse:
      title: RemovedReportResponse
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data22'
    BasicReport:
      title: BasicReport
      required:
      - id
      - customer_id
      - customer_identifier
      - connection_ids
      - status
      - created_at
      type: object
      properties:
        id:
          type: string
          description: the `id` of the general report generated based on the customer's data
        customer_id:
          type: string
          description: the `id` of the [customer](#customers) for which the report has been requested
        customer_identifier:
          type: string
          description: unique [customer](#customers) identifier
        connection_ids:
          type: array
          items:
            type: string
          description: '`ids` of [connections](#connections) included in the report'
        status:
          $ref: '#/components/schemas/Status4'
        created_at:
          type: string
          description: the date when the report was created
          format: date-time
    FullReport:
      title: FullReport
      required:
      - id
      - customer_id
      - customer_identifier
      - connection_ids
      - status
      - created_at
      - currency_code
      - from_date
      - to_date
      - report_types
      - data
      - updated_at
      type: object
      properties:
        id:
          type: string
          description: the `id` of the general report generated based on the customer's data
        customer_id:
          type: string
          description: the `id` of the [customer](#customers) for which the report has been requested
        customer_identifier:
          type: string
          description: unique [customer](#customers) identifier
        connection_ids:
          type: array
          items:
            type: string
          description: '`ids` of [connections](#connections) included in the report'
        status:
          $ref: '#/components/schemas/Status4'
        created_at:
          type: string
          description: the date when the report was created
          format: date-time
        currency_code:
          type: string
          description: main [currency code](#currencies) used for report's the generation and value conversion
        from_date:
          type: string
          description: the date from which the data in the report are included
          format: date
        to_date:
          type: string
          description: the date to which the data in the report are included
          format: date
        report_types:
          type: array
          items:
            $ref: '#/components/schemas/ReportType'
          description: types of reports
        data:
          $ref: '#/components/schemas/Report'
        updated_at:
          type: string
          description: the date when the report was last updated
          format: date-time
    Report:
      title: Report
      required:
      - result
      - customer_id
      - connection_ids
      - connections
      - currency_code
      - exchange_rates
      - report_id
      - report_types
      - status
      - from_date
      - to_date
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result'
        customer_id:
          type: integer
          description: The `id` of the [customer](#customers)
          format: int32
        connection_ids:
          type: array
          items:
            type: string
          description: '`ids` of [Connections](#connections) included in report'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/Connection1'
          description: information related to connections included in report
        currency_code:
          type: string
          description: main [currency code](#currencies) used for report's generation and value conversion
        exchange_rates:
          type: object
          description: a list of exchange rates at the time of report creation
        report_id:
          type: integer
          description: the `id` of the generated report
          format: int32
        report_types:
          type: array
          items:
            $ref: '#/components/schemas/ReportType'
          description: types of generated reports.
        status:
          $ref: '#/components/schemas/Status4'
        from_date:
          type: string
          description: the date from which the data in the report are included
          format: date
        to_date:
          type: string
          description: the date to which the data in the report are included
          format: date
    BalanceReport:
      title: BalanceReport
      required:
      - start_date_amount
      - end_date_amount
      - minimum
      - maximum
      - average
      - forecasted_average
      type: object
      properties:
        start_date_amount:
          type: number
          description: opening balance. The balance before the first [transaction](#transactions) was imported
        end_date_amount:
          type: number
          description: closing balance. The balance after the last [transaction](#transactions) was imported
        minimum:
          type: number
          description: The minimum balance registered for the report's date range
        maximum:
          type: number
          description: The maximum balance registered for the report's date range
        average:
          $ref: '#/components/schemas/Average'
        forecasted_average:
          $ref: '#/components/schemas/ForecastedAverage'
    IncomeReport:
      title: IncomeReport
      required:
      - start_date
      - end_date
      - transactions_count
      - last_year_amount
      - total
      - total_per_month
      - average
      - forecasted_average
      - streams
      type: object
      properties:
        start_date:
          type: string
          description: the date of the first income/expense [transaction](#transactions)
          format: date
        end_date:
          type: string
          description: the date of the last income/expense [transaction](#transactions)
          format: date
        transactions_count:
          type: integer
          description: number of income/expense [transactions](#transactions)
          format: int32
        last_year_amount:
          type: number
          description: total amount of income/expense for the last fully covered 12 months
        total:
          type: number
          description: total amount of income/expense per the calculated period
        total_per_month:
          type: array
          items:
            $ref: '#/components/schemas/TotalPerMonth'
          description: total amount of income/expense per each month
        average:
          $ref: '#/components/schemas/Average1'
        forecasted_average:
          $ref: '#/components/schemas/ForecastedAverage1'
        streams:
          $ref: '#/components/schemas/Streams'
    ExpenseReport:
      title: ExpenseReport
      required:
      - start_date
      - end_date
      - transactions_count
      - last_year_amount
      - total
      - total_per_month
      - average
      - forecasted_average
      - streams
      type: object
      properties:
        start_date:
          type: string
          description: the date of the first income/expense [transaction](#transactions)
          format: date
        end_date:
          type: string
          description: the date of the last income/expense [transaction](#transactions)
          format: date
        transactions_count:
          type: integer
          description: number of income/expense [transactions](#transactions)
          format: int32
        last_year_amount:
          type: number
          description: total amount of income/expense for the last fully covered 12 months
        total:
          type: number
          description: total amount of income/expense per the calculated period
        total_per_month:
          type: array
          items:
            $ref: '#/components/schemas/TotalPerMonth'
          description: total amount of income/expense per each month
        average:
          $ref: '#/components/schemas/Average1'
        forecasted_average:
          $ref: '#/components/schemas/ForecastedAverage1'
        streams:
          $ref: '#/components/schemas/Streams'
    SavingsReport:
      title: SavingsReport
      required:
      - per_month
      - average
      - forecasted_average
      - runway
      - expense_to_savings_rate
      - stress_runway
      - income_stability
      - income_regularity
      - income_to_expense_rate
      type: object
      properties:
        per_month:
          type: array
          items:
            $ref: '#/components/schemas/PerMonth'
          description: information related to net savings per each month
        average:
          $ref: '#/components/schemas/Average2'
        forecasted_average:
          $ref: '#/components/schemas/ForecastedAverage2'
        runway:
          type: number
          description: >-
            provides an estimate (number of months) on how long the customer's current balance will be sufficient until they run out of money. The customer's income and expenses are taken into account.


            <strong>Note:</strong> This indicator is calculated only for cases when the customer has positive current balance and the amount of their expenses exceeds the amount of their income
        expense_to_savings_rate:
          type: number
          description: >-
            shows whether the customer increases or loses his capital. Taking into account the customer's income and expenses, this indicator shows the number of months during which the customer's savings are either increased or reduced by an amount equal to 1 month of expenses.


            <strong>Note:</strong> This indicator is calculated only for cases when the customer has both savings/dissavings and expenses
        stress_runway:
          type: number
          description: >-
            provides an estimate (number of months) on how long the customer's current balance will be sufficient to cover their regular expenses in case they unexpectedly stops receiving income.


            <strong>Note:</strong> This indicator is calculated for all cases, except the one, when the customer has no expenses
        income_stability:
          type: number
          description: >-
            average weighted stability of income from all the sources


            <strong>Note:</strong> it is close to `1`, if customer has stable income
        income_regularity:
          type: number
          description: >-
            average weighted regularity of income from all the sources


            <strong>Note:</strong> it is close to `1`, if customer has regular income
        income_to_expense_rate:
          type: number
          description: ratio of average monthly income to average monthly expense"
    Transaction:
      title: Transaction
      required:
      - id
      - mode
      - status
      - made_on
      - amount
      - currency_code
      - description
      - category
      - duplicated
      - extra
      - account_id
      - created_at
      - updated_at
      type: object
      properties:
        id:
          type: string
          description: id of the transaction
        mode:
          $ref: '#/components/schemas/Mode2'
        status:
          $ref: '#/components/schemas/Status6'
        made_on:
          type: string
          description: the date when the transaction was made
          format: date
        amount:
          type: number
          description: transaction's amount
        currency_code:
          type: string
          description: transaction's currency code
        description:
          type: string
          description: transaction's description
        category:
          type: string
          description: transaction's category
        duplicated:
          type: boolean
          description: whether the transaction is duplicated or not
        extra:
          $ref: '#/components/schemas/TransactionExtra'
        account_id:
          type: string
          description: the `id` of the account the transaction belongs to
        created_at:
          type: string
          description: time and date when the transaction was imported
          format: date-time
        updated_at:
          type: string
          description: the last time when the transaction's attributes (duplicated flag set, category learned applied) were changed by the client
          format: date-time
    TransactionExtra:
      title: TransactionExtra
      type: object
      properties:
        account_balance_snapshot:
          type: number
          description: balance of the account at the moment of the attempt when the transaction was imported
        account_number:
          type: string
          description: number of the account the transaction belongs to
        additional:
          type: string
          description: additional information (recommended to use in concatenation with original description, if present)
        asset_amount:
          type: number
          description: original transaction amount in asset units
        asset_code:
          type: string
          description: 'asset common used abbreviation (Ex.: `BTC` - Bitcoin, `XAU` - Gold etc.)'
        categorization_confidence:
          type: number
          description: value from `0` to `1`, the probability that the current category is the correct one
        check_number:
          type: string
          description: payee's transaction check number
        closing_balance:
          type: number
          description: account balance after the transaction was imported
        constant_code:
          type: string
          description: payment reference for cashless domestic payments (transfers)
        convert:
          type: boolean
          description: whether the transaction amount was converted using exchange rates or not
        customer_category_code:
          type: string
          description: the category (present in [categories](#categories) list) that was categorized by the rules [created](#categories-learn) by the customer
        customer_category_name:
          type: string
          description: the category (not present in [categories](#categories) list) that was categorized by the rules [created](#categories-learn) by the customer
        id:
          type: string
          description: transaction's identifier on the bank's end (do not confuse it with Salt Edge transaction `id`)
        information:
          type: string
          description: information about the transaction
        mcc:
          type: string
          description: the transaction's [Merchant Category Code](http://www.irs.gov/irb/2004-31_IRB/ar17.html)
        merchant_id:
          type: string
          description: merchant's identifier
        opening_balance:
          type: number
          description: account balance before the transaction was imported
        installment_debt_amount:
          type: number
          description: amount of installment transactions group
        original_amount:
          type: number
          description: native amount of the transaction in transaction's currency (comes with `original_currency_code`)
        original_category:
          type: string
          description: the original category of the transaction
        original_currency_code:
          type: string
          description: native currency of the transaction (comes with `original_amount`)
        original_subcategory:
          type: string
          description: the original subcategory of the transaction
        payee:
          type: string
          description: to whom the money was paid
        payee_information:
          type: string
          description: additional payee information
        payer:
          type: string
          description: who paid the money
        payer_information:
          type: string
          description: additional payer information
        possible_duplicate:
          type: boolean
          description: is set to `true` if current transaction duplicates `amount`, `made_on` and `currency_code` of any transaction parsed in previous attempt
        posting_date:
          type: string
          description: date when the transaction appears in statement
          format: date
        posting_time:
          type: string
          description: time in `HH:MM:SS` format, representing time when the transaction appears in statement
        record_number:
          type: string
          description: bank record number
        specific_code:
          type: string
          description: additional identification information for cashless domestic payments (transfers)
        tags:
          type: array
          items:
            type: string
          description: user defined information in the bank or e-wallet interface, assigned to a transaction record (not category)
        time:
          type: string
          description: time when the transaction was made
          format: date-time
        transfer_account_name:
          type: string
          description: name of the linked account
        type:
          type: string
          description: transaction type
        unit_price:
          type: number
          description: price per unit (used with units, available for investment accounts nature only)
        units:
          type: number
          description: amount of units owned (used with unit_price, available for investment accounts nature only)
        variable_code:
          type: string
          description: identifies the tax subject to the tax office, used for domestic payments (transfers)
    DuplicateTransactionsRequestBody:
      title: DuplicateTransactionsRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data23'
    UnduplicateTransactionsRequestBody:
      title: UnduplicateTransactionsRequestBody
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data23'
    DuplicatedTransactionResponse:
      title: DuplicatedTransactionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data25'
    UnduplicatedTransactionResponse:
      title: UnduplicatedTransactionResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data26'
    TransactionsResponse:
      title: TransactionsResponse
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: ''
        meta:
          $ref: '#/components/schemas/MetaObject'
    RemovedTransactionsResponse:
      title: RemovedTransactionsResponse
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data27'
    ApiError:
      title: ApiError
      required:
      - error_class
      - error_message
      - request
      type: object
      properties:
        error_class:
          type: string
          description: The class of the error, one of the listed below.
        error_message:
          type: string
          description: A message describing the error.
        request:
          type: string
          description: The body of the request that caused the error.
      description: Error
    Account1:
      title: Account1
      required:
      - id
      - name
      - nature
      - connection_id
      - start_date
      - end_date
      - whole_months_count
      - days_count
      - monthly_average_transactions_count
      - balance
      - income
      - expense
      - savings
      type: object
      properties:
        id:
          type: string
          description: The `id` of the [account](#accounts)
        name:
          type: string
          description: the unique name of the account
        nature:
          $ref: '#/components/schemas/Nature1'
        connection_id:
          type: string
          description: '`id` of the [connection](#connections) to which the account belongs'
        start_date:
          type: string
          description: the date of the first transaction
          format: date
        end_date:
          type: string
          description: the date of the last transaction
          format: date
        whole_months_count:
          type: integer
          description: number of full months covered by the report
          format: int32
        days_count:
          type: integer
          description: number of days covered by the report
          format: int32
        monthly_average_transactions_count:
          $ref: '#/components/schemas/MonthlyAverageTransactionsCount'
        balance:
          $ref: '#/components/schemas/BalanceReport'
        income:
          $ref: '#/components/schemas/IncomeReport'
        expense:
          $ref: '#/components/schemas/ExpenseReport'
        savings:
          $ref: '#/components/schemas/SavingsReport'
    Account2:
      title: Account2
      required:
      - id
      - name
      - nature
      - balance
      - original_balance
      - original_currency_code
      - transactions
      type: object
      properties:
        id:
          type: string
          description: the `id` of the [account](#accounts)
        name:
          type: string
          description: the unique name of the account
        nature:
          $ref: '#/components/schemas/Nature2'
        balance:
          type: number
          description: the account's current balance in currency used for report's generation
        original_balance:
          type: number
          description: the account's current balance in account's original currency
        original_currency_code:
          type: string
          description: the account's original currency code
        transactions:
          $ref: '#/components/schemas/Transactions'
    AccountsSummary:
      title: AccountsSummary
      required:
      - start_date
      - end_date
      - whole_months_count
      - days_count
      - transactions_count
      - monthly_average_transactions_count
      - balance
      - income
      - expense
      - savings
      type: object
      properties:
        start_date:
          type: string
          description: the date of the first transaction
          format: date
        end_date:
          type: string
          description: the date of the last transaction
          format: date
        whole_months_count:
          type: integer
          description: number of full months covered by the report
          format: int32
        days_count:
          type: integer
          description: number of days covered by the report
          format: int32
        transactions_count:
          type: integer
          description: total number of transactions
          format: int32
        monthly_average_transactions_count:
          $ref: '#/components/schemas/MonthlyAverageTransactionsCount'
        balance:
          $ref: '#/components/schemas/BalanceReport'
        income:
          $ref: '#/components/schemas/IncomeReport'
        expense:
          $ref: '#/components/schemas/ExpenseReport'
        savings:
          $ref: '#/components/schemas/SavingsReport'
      description: the report with the summary data for all accounts
    Address:
      title: Address
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        street:
          type: string
        country_code:
          type: string
        post_code:
          type: string
    Amount:
      title: Amount
      required:
      - total
      - average
      - median
      - stdev
      type: object
      properties:
        total:
          type: number
          description: Total stream income/expense
        average:
          type: number
          description: Average stream income/expense
        median:
          type: number
          description: Median stream income/expense
        stdev:
          type: number
          description: Standard deviation of the stream income/expense
      description: Information related to amounts of regular income/expense, which belong to the stream
    Annual:
      title: Annual
      required:
      - amount
      - start_date
      - end_date
      type: object
      properties:
        amount:
          type: number
          description: average balance amount
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) within the date range used for annual average balance calculation
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions)  within the date range used for annual average balance calculation
          format: date
      description: annual average balance
    ApiMode:
      title: ApiMode
      enum:
      - app
      - service
      type: string
      description: the API mode of the customer that queried the API.
    Average:
      title: Average
      required:
      - daily
      - monthly
      - quarterly
      - annual
      - minimum_monthly
      - maximum_monthly
      type: object
      properties:
        daily:
          $ref: '#/components/schemas/Daily'
        monthly:
          $ref: '#/components/schemas/Monthly'
        quarterly:
          $ref: '#/components/schemas/Quarterly'
        annual:
          $ref: '#/components/schemas/Annual'
        minimum_monthly:
          $ref: '#/components/schemas/MinimumMonthly'
        maximum_monthly:
          $ref: '#/components/schemas/MaximumMonthly'
      description: average balance
    Average1:
      title: Average1
      required:
      - monthly
      - quarterly
      - annual
      type: object
      properties:
        monthly:
          type: number
          description: monthly average amount of income/expense
        quarterly:
          type: number
          description: quarterly average amount of income/expense
        annual:
          type: number
          description: annual average amount of income/expense
      description: average amount of income/expense
    Average2:
      title: Average2
      required:
      - monthly
      - quarterly
      - annual
      type: object
      properties:
        monthly:
          type: number
          description: monthly average savings
        quarterly:
          type: number
          description: quarterly average savings
        annual:
          type: number
          description: annual average savings
      description: average savings
    CardType:
      title: CardType
      enum:
      - american_express
      - china_unionpay
      - diners_club
      - jcb
      - maestro
      - master_card
      - uatp
      - visa
      - mir
      type: string
      description: type of the `card` account.
    Categorization:
      title: Categorization
      enum:
      - none
      - personal
      - business
      type: string
      description: the type of categorization applied.
    CollectedBy:
      title: CollectedBy
      enum:
      - client
      - saltedge
      type: string
      description: entity who collected the consent.
    Connection1:
      title: Connection1
      required:
      - id
      - customer_id
      - provider_code
      - provider_name
      - accounts
      - holder_info
      - client_name
      type: object
      properties:
        id:
          type: string
          description: The `id` of the [connection](#connections)
        customer_id:
          type: integer
          description: The `id` of the [customer](#customers)
          format: int32
        provider_code:
          type: string
          description: the code of the [Provider](#providers) the connection belongs to
        provider_name:
          type: string
          description: the name of the [Provider](#providers) the connection belongs to
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account2'
          description: information related to accounts, which belong to this connection
        holder_info:
          type: string
          description: essential information about the account holder fetched from the connected provider
        client_name:
          type: string
          description: Name of the Salt Edge Client, who requested the Financial Insights report
    Contact:
      title: Contact
      required:
      - mode
      - value
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/Mode1'
        value:
          type: string
    Count:
      title: Count
      required:
      - regular
      - irregular
      - maximum_overlapping
      type: object
      properties:
        regular:
          type: integer
          description: number of regular income/expense streams
          format: int32
        irregular:
          type: integer
          description: >-
            number of irregular income/expense streams


            <strong>Note:</strong> the number always equals to 1, because the irregular stream contains all the irregular transactions, which have not become a part of any regular stream, as they are not consistent, regular and periodic.
          format: int32
        maximum_overlapping:
          type: integer
          description: maximum number of regular overlapping streams at the same time
          format: int32
      description: number of income/expense streams
    CredentialsStrategy:
      title: CredentialsStrategy
      enum:
      - store
      - do_not_store
      - ask
      type: string
      description: >-
        the strategy of storing customer's credentials.


        <strong>Note:</strong> If the value is `ask`, on the Connect page customer will be able to choose whether to save or not his credentials on Salt Edge side
    Daily:
      title: Daily
      required:
      - amount
      - start_date
      - end_date
      type: object
      properties:
        amount:
          type: number
          description: average balance amount
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) within the date range used for daily average balance calculation
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions) within the date range used for daily average balance calculation
          format: date
      description: daily average balance
    Data:
      title: Data
      required:
      - customer_id
      - transactions
      type: object
      properties:
        customer_id:
          type: string
          description: the `id` of the customer received from [customer create](#customers-create). This field is optional for ['app' authentication](/general/#services_and_apps_authentication).
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction2'
          description: ''
    Data1:
      title: Data1
      type: object
      properties:
        learned:
          type: boolean
          default: true
    Data2:
      title: Data2
      type: object
      properties:
        business:
          type: object
          description: '[Business categories](/data_enrichment/v5/#business-categories)'
        personal:
          type: object
          description: '[Personal categories](/data_enrichment/v5/#personal-categories)'
    Data3:
      title: Data3
      required:
      - customer_id
      - consent
      type: object
      properties:
        customer_id:
          type: string
          description: the `id` of the customer received from [customer create](#customers-create). This field is optional for ['app' authentication](/general/#services_and_apps_authentication)
        consent:
          $ref: '#/components/schemas/ConsentRequestBody'
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        allowed_countries:
          type: array
          items:
            type: string
          description: "the list of countries that will be accessible in Salt Edge Connect, e.g.: `['US', 'DE']`."
          nullable: true
        provider_code:
          type: string
          description: the code of the desired provider, defaults to `null`
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        disable_provider_search:
          type: boolean
          description: whether the provider search will be disabled, works only if `provider_code` parameter is sent.
        return_connection_id:
          type: boolean
          description: whether to append `connection_id` to `return_to` URL.
        provider_modes:
          type: array
          items:
            $ref: '#/components/schemas/ProviderMode'
          description: restricts the list of the providers to only the ones that have the mode included in the array.
        categorization:
          $ref: '#/components/schemas/Categorization'
        javascript_callback_type:
          $ref: '#/components/schemas/JavascriptCallbackType'
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
        lost_connection_notify:
          type: boolean
          description: "being sent as `true`, enables you to receive a javascript callback whenever the internet connection is lost during the fetching process. The type of the callback depends on the `javascript_callback_type` you specified. It has the following payload: `{data: {error_class: 'ConnectionLost', error_message: 'Internet connection was lost'}}`."
        show_consent_confirmation:
          type: boolean
          description: if consent confirmation is handled on the client's side, this parameter should be sent as `false` so, upon submitting the form, the user will not be asked to give his consent to Salt Edge Inc.
          default: true
        credentials_strategy:
          $ref: '#/components/schemas/CredentialsStrategy'
        return_error_class:
          type: boolean
          description: whether to append `error_class` to `return_to` URL.
        theme:
          $ref: '#/components/schemas/Theme'
        connect_template:
          type: string
          description: defaults to `Salt Edge Connect` template unless a different template is passed and available for the current client
    Data4:
      title: Data4
      required:
      - connection_id
      - consent
      type: object
      properties:
        connection_id:
          type: string
          description: the `id` of the connection you wish to reconnect
        consent:
          $ref: '#/components/schemas/ConsentRequestBody'
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        return_connection_id:
          type: boolean
          description: whether to append `connection_id` to `return_to` URL.
        provider_modes:
          type: array
          items:
            $ref: '#/components/schemas/ProviderMode'
          description: restricts the list of the providers to only the ones that have the mode included in the array.
        javascript_callback_type:
          $ref: '#/components/schemas/JavascriptCallbackType'
        categorization:
          $ref: '#/components/schemas/Categorization'
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
        lost_connection_notify:
          type: boolean
          description: "being sent as `true`, enables you to receive a javascript callback whenever the internet connection is lost during the fetching process. The type of the callback depends on the `javascript_callback_type` you specified. It has the following payload: `{data: {error_class: 'ConnectionLost', error_message: 'Internet connection was lost' }}`."
        show_consent_confirmation:
          type: boolean
          description: if consent confirmation is handled on the client's side, this parameter should be sent as `false` so, upon submitting the form, the user will not be asked to give his consent to Salt Edge Inc.
          default: true
        credentials_strategy:
          $ref: '#/components/schemas/CredentialsStrategy'
        return_error_class:
          type: boolean
          description: whether to append `error_class` to `return_to` URL.
        theme:
          $ref: '#/components/schemas/Theme'
        connect_template:
          type: string
          description: defaults to `Salt Edge Connect` template unless a different template is passed and available for the current client
        override_credentials_strategy:
          $ref: '#/components/schemas/OverrideCredentialsStrategy'
    Data5:
      title: Data5
      required:
      - connection_id
      type: object
      properties:
        connection_id:
          type: string
          description: the `id` of the connection you wish to reconnect
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
          default: false
        return_connection_id:
          type: boolean
          description: shows whether to append `connection_id` to `return_to` URL.
          default: false
        provider_modes:
          type: array
          items:
            $ref: '#/components/schemas/ProviderMode'
          description: restrict the list of the providers to only the ones that have the mode included in the array.
        javascript_callback_type:
          $ref: '#/components/schemas/JavascriptCallbackType2'
        categorization:
          $ref: '#/components/schemas/Categorization'
        lost_connection_notify:
          type: boolean
          description: "being sent as `true`, enables you to receive a javascript callback whenever the internet connection is lost during the fetching process. The type of the callback depends on the `javascript_callback_type` you specified. It has the following payload: `{data: {error_class: 'ConnectionLost', error_message: 'Internet connection was lost'}}`."
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
        return_error_class:
          type: boolean
          description: whether to append `error_class` to `return_to` URL.
        theme:
          $ref: '#/components/schemas/Theme'
        connect_template:
          type: string
          description: defaults to `Salt Edge Connect` template unless a different template is passed and available for the current client
    Data6:
      title: Data6
      type: object
      properties:
        expires_at:
          type: string
          format: date-time
        connect_url:
          type: string
    Data7:
      title: Data7
      required:
      - customer_id
      - country_code
      - provider_code
      - consent
      type: object
      properties:
        customer_id:
          type: string
          description: the `id` of the customer
        country_code:
          type: string
          description: the country code of the desired provider
        provider_code:
          type: string
          description: the code of the desired provider
        consent:
          $ref: '#/components/schemas/ConsentRequestBody'
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        credentials:
          type: object
          description: the credentials required to access the data
        encrypted_credentials:
          type: object
          description: the [encrypted credentials](#encrypted_credentials) required to access the data
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
        categorization:
          $ref: '#/components/schemas/Categorization'
        file_url:
          type: boolean
          description: URL of a file. Is used when creating a connection for a provider with `file` mode
    Data8:
      title: Data8
      type: object
      properties:
        credentials:
          type: object
          description: the credentials object based on the provider's interactive fields
        encrypted_credentials:
          type: object
          description: the [encrypted credentials](#encrypted_credentials) required to access the data, based on provider's interactive fields
    Data9:
      title: Data9
      type: object
      properties:
        credentials:
          type: object
          description: the credentials required to access the data
        encrypted_credentials:
          type: object
          description: the [encrypted credentials](#encrypted_credentials) required to access the data
        consent:
          $ref: '#/components/schemas/ConsentRequestBody'
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
        categorization:
          $ref: '#/components/schemas/Categorization'
        file_url:
          type: boolean
          description: URL of a file. Is used when creating a connection for a provider with `file` mode
        override_credentials:
          type: boolean
          description: if sent as `true`, new credentials will automatically override the old ones, in the scenario were the new credentials are different from the ones in the previous attempt.
    Data10:
      title: Data10
      type: object
      properties:
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
        categorization:
          $ref: '#/components/schemas/Categorization'
    Data11:
      title: Data11
      type: object
      properties:
        id:
          type: string
          description: '`id` of the connection'
        removed:
          type: boolean
          default: true
    Data12:
      title: Data12
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status1'
        daily_refresh:
          type: boolean
          description: whether the connection will be refreshed daily
        store_credentials:
          type: boolean
          description: >-
            allows to not store credentials on Salt Edge side.


            <strong>Note:</strong> The usage of this flag is not available for `file` providers.

            In order to update the connection, reconnect is required. It will not be possible to use refresh option if `store_credentials` is set to `false`
          default: true
    Data13:
      title: Data13
      required:
      - identifier
      type: object
      properties:
        identifier:
          type: string
          description: a unique `id` of the new customer
    Data14:
      title: Data14
      type: object
      properties:
        locked:
          type: boolean
          default: true
        id:
          type: integer
          format: int32
    Data15:
      title: Data15
      type: object
      properties:
        unlocked:
          type: boolean
          default: true
        id:
          type: integer
          format: int32
    Data16:
      title: Data16
      type: object
      properties:
        deleted:
          type: boolean
          default: true
        id:
          type: integer
          format: int32
    Data17:
      title: Data17
      required:
      - query_string
      - connection_id
      type: object
      properties:
        query_string:
          type: string
          description: all the parameters appended to your `return_to` URL upon being redirected from the bank back to your application
        connection_id:
          type: string
          description: the `id` of the connection that is being authorized
    Data18:
      title: Data18
      required:
      - country_code
      - created_at
      - customer_id
      - daily_refresh
      - id
      - show_consent_confirmation
      - last_consent_id
      - last_attempt
      - last_success_at
      - next_refresh_possible_at
      - provider_id
      - provider_code
      - provider_name
      - status
      - store_credentials
      - updated_at
      type: object
      properties:
        country_code:
          type: string
          description: code of the country the provider belongs to
        created_at:
          type: string
          description: time and date when the connection was added
          format: date-time
        customer_id:
          type: string
          description: customer's `id`
        daily_refresh:
          type: boolean
          description: whether the connection will be refreshed daily
        id:
          type: string
          description: the `id` of the connection
        show_consent_confirmation:
          type: boolean
          description: whether any consent was given for this connection on Salt Edge side
        last_consent_id:
          type: string
          description: the `id` of the last [consent](#consents)
        last_attempt:
          $ref: '#/components/schemas/SimplifiedAttempt'
        last_success_at:
          type: string
          description: time when the connection was successfully fetched
          format: date-time
        next_refresh_possible_at:
          type: string
          description: when the next refresh will be available. May contain `null` value if connection has `automatic_fetch` set as `false`, or is already processing
          format: date-time
        provider_id:
          type: string
          description: the `id` of the provider the connection belongs to
        provider_code:
          type: string
          description: the code of the provider the connection belongs to
        provider_name:
          type: string
          description: the name of the provider the connection belongs to
        status:
          $ref: '#/components/schemas/Status'
        store_credentials:
          type: boolean
          description: whether the credentials were stored on our side
        updated_at:
          type: string
          description: the last time when the connection's balance was changed, new accounts were imported or new transactions added/removed
          format: date-time
    Data19:
      title: Data19
      required:
      - customer_id
      - country_code
      - provider_code
      - consent
      type: object
      properties:
        customer_id:
          type: string
          description: the `id` of the customer received from [customer create](#customers-create). This field is optional for ['app' authentication](/general/#services_and_apps_authentication)
        country_code:
          type: string
          description: the code of the country
        provider_code:
          type: string
          description: the code of the provider
        consent:
          $ref: '#/components/schemas/ConsentRequestBody'
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        return_connection_id:
          type: boolean
          description: whether to append `connection_id` to `return_to` URL.
        categorization:
          $ref: '#/components/schemas/Categorization'
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
    Data20:
      title: Data20
      type: object
      properties:
        connection_id:
          type: string
          description: '`id` of the connection'
        connection_secret:
          type: string
        attempt_id:
          type: string
          description: '`id` of the attempt'
        token:
          type: string
        expires_at:
          type: string
          format: date-time
        redirect_url:
          type: string
    Data21:
      title: Data21
      required:
      - connection_id
      - consent
      type: object
      properties:
        connection_id:
          type: string
          description: the `id` of the connection that is to be reconnected
        consent:
          $ref: '#/components/schemas/ConsentRequestBody'
        attempt:
          $ref: '#/components/schemas/AttemptRequestBody'
        daily_refresh:
          type: boolean
          description: whether the connection should be automatically refreshed by Salt Edge.
        return_connection_id:
          type: boolean
          description: whether to append `connection_id` to `return_to` URL.
        categorization:
          $ref: '#/components/schemas/Categorization'
        include_fake_providers:
          type: boolean
          description: if sent as `true`, the customers of [live](/general/#live) clients will be able to connect [fake providers](#providers-fake).
    Data22:
      title: Data22
      required:
      - id
      - deleted
      type: object
      properties:
        id:
          type: string
        deleted:
          type: boolean
          example: true
    Data23:
      title: Data23
      required:
      - transaction_ids
      - customer_id
      type: object
      properties:
        transaction_ids:
          type: array
          items:
            type: string
          description: the array of transactions `ids`
        customer_id:
          type: string
          description: the `id` of the customer"
    Data25:
      title: Data25
      type: object
      properties:
        duplicated:
          type: boolean
          default: true
    Data26:
      title: Data26
      type: object
      properties:
        unduplicated:
          type: boolean
          default: true
    Data27:
      title: Data27
      type: object
      properties:
        cleanup_started:
          type: boolean
          default: true
    Datum:
      title: Datum
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    DeviceType:
      title: DeviceType
      enum:
      - desktop
      - tablet
      - mobile
      type: string
      description: the type of the device that created the attempt.
    FetchScope:
      title: FetchScope
      enum:
      - accounts
      - holder_info
      - transactions
      type: string
    ForecastedAverage:
      title: ForecastedAverage
      required:
      - next_month
      - next_quarter
      - next_year
      type: object
      properties:
        next_month:
          type: number
          description: forecasted average balance for the next calendar month
        next_quarter:
          type: number
          description: forecasted average balance for the next 3 calendar months
        next_year:
          type: number
          description: forecasted average balance for the next 12 calendar months
      description: forecasted average balance
    ForecastedAverage1:
      title: ForecastedAverage1
      required:
      - next_month
      - next_quarter
      - next_year
      type: object
      properties:
        next_month:
          type: number
          description: forecasted average amount of income/expense for the next calendar month
        next_quarter:
          type: number
          description: forecasted average amount of income/expense for the next 3 calendar months
        next_year:
          type: number
          description: forecasted average amount of income/expense for the next 12 calendar months
      description: forecasted average amount of income/expense
    ForecastedAverage2:
      title: ForecastedAverage2
      required:
      - next_month
      - next_quarter
      - next_year
      type: object
      properties:
        next_month:
          type: number
          description: forecasted average savings for the next calendar month
        next_quarter:
          type: number
          description: forecasted average savings for the next 3 calendar months
        next_year:
          type: number
          description: forecasted average savings for the next 12 calendar months
      description: forecasted average savings
    Frequency:
      title: Frequency
      enum:
      - daily
      - 3_times_a_week
      - twice_a_week
      - weekly
      - 3_times_a_month
      - every_2_weeks
      - monthly
      - every_2_months
      - quarterly
      - 3_times_a_year
      - 2_times_a_year
      - annual
      - few_years
      type: string
      description: average period of time between two [transactions](#transactions) in the stream.
    IdentificationMode:
      title: IdentificationMode
      enum:
      - client
      - saltedge
      type: string
      description: whether the request to the provider is made with your [authorization headers](/general/#client_provider_keys) or with Salt Edge's.
    Irregular:
      title: Irregular
      required:
      - transactions_count
      - transaction_ids
      - start_date
      - end_date
      type: object
      properties:
        transactions_count:
          type: integer
          description: number of transactions, which belong to the stream
          format: int32
        transaction_ids:
          type: array
          items:
            type: string
          description: '`ids` of [transactions](#transactions), which belong to the stream'
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) from the stream
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions) from the stream
          format: date
      description: irregular income/expense stream
    JavascriptCallbackType:
      title: JavascriptCallbackType
      enum:
      - iframe
      - external_saltbridge
      - external_notify
      - post_message
      type: string
      description: allows you to specify what kind of callback type you are expecting.
    JavascriptCallbackType2:
      title: JavascriptCallbackType2
      enum:
      - iframe
      - external_saltbridge
      - external_notify
      - post_message
      type: string
      description: allows you to specify what kind of callback type you are expecting. If `null`, it means that you will not receive any callbacks.
    MaximumMonthly:
      title: MaximumMonthly
      required:
      - amount
      - start_date
      - end_date
      type: object
      properties:
        amount:
          type: number
          description: average balance amount
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) within the date range used for maximum monthly average balance calculation
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions)  within the date range used for maximum monthly average balance calculation
          format: date
      description: maximum monthly average balance
    Merchant1:
      title: Merchant1
      required:
      - name
      - email
      - phone
      - address
      - website
      type: object
      properties:
        name:
          type: string
          description: merchant's name
        email:
          type: string
          description: merchant's email address
        phone:
          type: string
          description: merchant's phone
        address:
          type: string
          description: merchant's address
        website:
          type: string
          description: merchant's website
      description: merchant common for the stream
    Meta:
      title: Meta
      type: object
      properties:
        issued_on:
          type: string
          format: date
    MinimumMonthly:
      title: MinimumMonthly
      required:
      - amount
      - start_date
      - end_date
      type: object
      properties:
        amount:
          type: number
          description: average balance amount
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) within the date range used for minimum monthly average balance calculation
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions)  within the date range used for minimum monthly average balance calculation
          format: date
      description: minimum monthly average balance
    Mode:
      title: Mode
      enum:
      - name
      - transliterated_name
      - alternative_name
      - brand
      - operator
      type: string
    Mode1:
      title: Mode1
      enum:
      - email
      - viber
      - phone
      - fax
      - website
      - facebook
      - twitter
      - google_plus
      - linkedin
      - instagram
      - skype
      - vk
      - flickr
      - youtube
      type: string
    Mode2:
      title: Mode2
      enum:
      - normal
      - fee
      - transfer
      type: string
    mode3:
      title: mode3
      enum:
      - oauth
      - web
      - api
      - file
      type: string
      description: filtering providers by mode.
    Monthly:
      title: Monthly
      required:
      - amount
      - start_date
      - end_date
      type: object
      properties:
        amount:
          type: number
          description: average balance amount
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) within the date range used for monthly average balance calculation
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions)  within the date range used for monthly average balance calculation
          format: date
      description: monthly average balance
    MonthlyAverageTransactionsCount:
      title: MonthlyAverageTransactionsCount
      required:
      - total
      - income
      - expense
      type: object
      properties:
        total:
          type: integer
          description: average number of expense and income transactions per month
          format: int32
        income:
          type: integer
          description: average number of income transactions per month
          format: int32
        expense:
          type: integer
          description: average number of expense transactions per month
          format: int32
      description: average number of transactions per month
    Name:
      title: Name
      enum:
      - start
      - connect
      - interactive
      - fetch_holder_info
      - fetch_accounts
      - fetch_recent
      - fetch_full
      - disconnect
      - finish
      type: string
      description: the name of the stage.
    Name1:
      title: Name1
      required:
      - mode
      - value
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/Mode'
        value:
          type: string
    Nature:
      title: Nature
      enum:
      - account
      - bonus
      - card
      - checking
      - credit
      - credit_card
      - debit_card
      - ewallet
      - insurance
      - investment
      - loan
      - mortgage
      - savings
      type: string
      description: >-
        the type of the account


        <strong>Note:</strong> for `credit_card` nature, the balance represents the sum of all negative transactions, the positive ones do not count.
    Nature1:
      title: Nature1
      enum:
      - account
      - bonus
      - card
      - checking
      - credit
      - credit_card
      - debit_card
      - ewallet
      - insurance
      - investment
      - loan
      - mortgage
      - savings
      type: string
      description: The type of the account
    Nature2:
      title: Nature2
      enum:
      - account
      - bonus
      - card
      - checking
      - credit
      - credit_card
      - debit_card
      - ewallet
      - insurance
      - investment
      - loan
      - mortgage
      - savings
      type: string
      description: The type of the account.
    OverrideCredentialsStrategy:
      title: OverrideCredentialsStrategy
      enum:
      - ask
      - override
      type: string
      description: If sent as `ask`, the user will be required to confirm the credentials override upon submitting the form, in the scenario where the new credentials are different from the ones in the previous attempt. If sent as `override`, the new credentials will automatically override the old ones.
    PerMonth:
      title: PerMonth
      required:
      - year
      - month
      - is_whole_month
      - amount
      type: object
      properties:
        year:
          type: integer
          description: year that the calculation was made for
          format: int32
        month:
          type: integer
          description: month that the calculation was made for
          format: int32
        is_whole_month:
          type: boolean
          description: will be `true` if the whole month is covered by the report
        amount:
          type: number
          description: amount of net savings per specified month and year
    provider_key_owner:
      title: provider_key_owner
      enum:
      - client
      - saltedge
      type: string
      description: filtering providers by key owner. When value is set as `client`, only providers with client-set keys will be returned. Please see [Client Provider Keys](/general/#client_provider_keys).
    ProviderMode:
      title: ProviderMode
      enum:
      - oauth
      - web
      - api
      - file
      type: string
    Quarterly:
      title: Quarterly
      required:
      - amount
      - start_date
      - end_date
      type: object
      properties:
        amount:
          type: number
          description: average balance amount
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) within the date range used for quarterly average balance calculation
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions)  within the date range used for quarterly average balance calculation
          format: date
      description: quarterly average balance
    RefreshStartTime:
      title: RefreshStartTime
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      type: integer
      description: Local country time when connections will be automatically refreshed.
      example: 0
    Regular:
      title: Regular
      required:
      - transactions_count
      - transaction_ids
      - start_date
      - end_date
      - amount
      - frequency
      - days_count
      - category_code
      - description
      - merchant
      type: object
      properties:
        transactions_count:
          type: integer
          description: number of transactions, which belong to the stream
          format: int32
        transaction_ids:
          type: array
          items:
            type: string
          description: '`ids` of [transactions](#transactions), which belong to the stream'
        start_date:
          type: string
          description: the date of the first [transaction](#transactions) from the stream
          format: date
        end_date:
          type: string
          description: the date of the last [transaction](#transactions) from the stream
          format: date
        amount:
          $ref: '#/components/schemas/Amount'
        frequency:
          $ref: '#/components/schemas/Frequency'
        days_count:
          type: integer
          description: average number of days between two [transactions](#transactions) in the stream
          format: int32
        category_code:
          type: string
          description: category of transactions which belong to the stream
        description:
          type: string
          description: "[transaction's](#transactions) description common for the stream"
        merchant:
          $ref: '#/components/schemas/Merchant1'
    report_type2:
      title: report_type2
      enum:
      - balance
      - expense
      - income
      - savings
      type: string
    ReportType:
      title: ReportType
      enum:
      - balance
      - expense
      - income
      - savings
      type: string
    Result:
      title: Result
      required:
      - accounts
      - accounts_summary
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account1'
          description: The report data per each account
        accounts_summary:
          $ref: '#/components/schemas/AccountsSummary'
      description: report result
    RevokeReason:
      title: RevokeReason
      enum:
      - expired
      - client
      - provider
      - saltedge
      type: string
      description: revoke reason.
    Scope:
      title: Scope
      enum:
      - account_details
      - holder_information
      - transactions_details
      type: string
    Status:
      title: Status
      enum:
      - active
      - inactive
      - disabled
      type: string
    Status1:
      title: Status1
      enum:
      - inactive
      type: string
    Status4:
      title: Status4
      enum:
      - initialized
      - success
      - failed
      - calculating
      type: string
      description: current report's status.
    Status6:
      title: Status6
      enum:
      - posted
      - pending
      type: string
    Streams:
      title: Streams
      required:
      - regular_amount
      - irregular_amount
      - count
      - regular
      - irregular
      type: object
      properties:
        regular_amount:
          type: number
          description: the total amount of regular income/expense
        irregular_amount:
          type: number
          description: the total amount of irregular income/expense
        count:
          $ref: '#/components/schemas/Count'
        regular:
          type: array
          items:
            $ref: '#/components/schemas/Regular'
          description: regular income/expense stream
        irregular:
          $ref: '#/components/schemas/Irregular'
      description: Information on income/expense a customer receives/spends on a regular/irregular basis
    SupportedAccountType:
      title: SupportedAccountType
      enum:
      - personal
      - business
      type: string
    Theme:
      title: Theme
      enum:
      - default
      - dark
      type: string
      description: theme of Salt Edge Connect template. If not passed or available for the current template, will use `default`.
    TotalPerMonth:
      title: TotalPerMonth
      required:
      - year
      - month
      - is_whole_month
      - amount
      type: object
      properties:
        year:
          type: integer
          description: year that the calculation was made for
          format: int32
        month:
          type: integer
          description: month that the calculation was made for
          format: int32
        is_whole_month:
          type: boolean
          description: will be `true` if the whole month is covered by the report
        amount:
          type: number
          description: amount of income/expense per specified month and year
    Transaction2:
      title: Transaction2
      required:
      - id
      - category_code
      type: object
      properties:
        id:
          type: string
          description: the `id` of the transaction
        category_code:
          type: string
          description: the new category code of the transaction
        immediate:
          type: boolean
          description: >-
            If sent as `false`, the learning threshold of the categorizer will be applied - the categorizer will store information about the user's custom category for the transaction with this description. In case the categorizer identifies that the category has been updated 3 times for the transaction with this description, further transactions with this description will be automatically categorized for this user under this category.


            If sent as `true`, the learning threshold of the categorizer will be ignored and further transactions with the same description will be classified under the category chosen by the user.
    Transactions:
      title: Transactions
      required:
      - start_date
      - end_date
      - first_id
      - last_id
      - count
      type: object
      properties:
        start_date:
          type: string
          description: the date of the first transaction
        end_date:
          type: string
          description: the date of the last transaction
        first_id:
          type: string
          description: the `id` of the first [transaction](#transactions)
        last_id:
          type: string
          description: the `id` of the last [transaction](#transactions)
        count:
          type: integer
          description: total number of transactions
          format: int32
      description: transactions related information
    TransactionsCount:
      title: TransactionsCount
      type: object
      properties:
        posted:
          type: integer
          format: int32
        pending:
          type: integer
          format: int32
      description: number of transactions, separated by posted and pending
  securitySchemes:
    App-id:
      type: apiKey
      description: ''
      name: App-id
      in: header
    Secret:
      type: apiKey
      description: ''
      name: Secret
      in: header
security:
- App-id: []
  Secret: []
tags:
- name: Accounts
  description: ''
- name: Assets
  description: ''
- name: Attempts
  description: ''
- name: Categories
  description: ''
- name: Connect Sessions
  description: ''
- name: Connections
  description: ''
- name: Consents
  description: ''
- name: Countries
  description: ''
- name: Currencies
  description: ''
- name: Customers
  description: ''
- name: Holder Info
  description: ''
- name: Merchants
  description: ''
- name: Oauth Providers
  description: ''
- name: Providers
  description: ''
- name: Rates
  description: ''
- name: Reports
  description: ''
- name: Transactions
  description: ''
externalDocs:
  description: Documentation
  url: https://docs.saltedge.com/account_information/v5
